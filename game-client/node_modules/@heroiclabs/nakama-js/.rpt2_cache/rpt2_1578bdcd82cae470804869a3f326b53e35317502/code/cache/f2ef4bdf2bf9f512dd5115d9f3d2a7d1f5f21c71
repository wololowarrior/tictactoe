{"map":"{\"version\":3,\"file\":\"api.gen.js\",\"sourceRoot\":\"\",\"sources\":[\"../../api.gen.ts\"],\"names\":[],\"mappings\":\"AAGA,MAAM,SAAS,GAAG,qBAAqB,CAAC;AA2jBxC,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,gBAAyC;IACjE,QAAQ,EAAE,SAAS;IACnB,WAAW,EAAE,EAAE;IACf,QAAQ,EAAE,EAAE;IACZ,QAAQ,EAAE,EAAE;IACZ,SAAS,EAAE,IAAI;CAChB,EAAE,EAAE;IACH,MAAM,IAAI,GAAG;QAEX,OAAO,CAAC,OAAe,EAAE,MAAc,EAAE,WAAgB,EAAE,IAAU,EAAE,OAAa;YAClF,MAAM,QAAQ,GAAG,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;iBAC5C,GAAG,CAAC,CAAC,CAAC,EAAE;gBACP,IAAI,WAAW,CAAC,CAAC,CAAC,YAAY,KAAK,EAAE;oBACnC,OAAO,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAS,EAAE,IAAS,EAAE,EAAE;wBACpD,OAAO,IAAI,GAAG,kBAAkB,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,kBAAkB,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;oBAC7E,CAAC,EAAE,EAAE,CAAC,CAAC;iBACR;qBAAM;oBACL,IAAI,WAAW,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;wBAC1B,OAAO,kBAAkB,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,kBAAkB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;qBAC/E;iBACF;YACH,CAAC,CAAC;iBACD,IAAI,CAAC,EAAE,CAAC,CAAC;YAEZ,MAAM,YAAY,iBAAO,EAAE,MAAM,EAAE,MAAM,EAAyB,EAAK,OAAO,CAAC,CAAC;YAChF,YAAY,CAAC,OAAO,qBAAO,OAAO,CAAC,OAAO,CAAC,CAAC;YAC5C,IAAI,aAAa,CAAC,WAAW,EAAE;gBAC7B,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,SAAS,GAAG,aAAa,CAAC,WAAW,CAAC;aAC/E;iBAAM,IAAI,aAAa,CAAC,QAAQ,EAAE;gBACjC,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,GAAG,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC;aAChH;YACD,IAAG,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;gBACxD,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,kBAAkB,CAAC;aACrD;YACD,IAAG,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE;gBAC9D,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,kBAAkB,CAAC;aAC3D;YACD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,GAAW,EAAE,EAAE;gBACxD,IAAG,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;oBAC7B,OAAO,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;iBAClC;YACH,CAAC,CAAC,CAAC;YACH,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC;YAEzB,OAAO,OAAO,CAAC,IAAI,CAAC;gBAClB,KAAK,CAAC,aAAa,CAAC,QAAQ,GAAG,OAAO,GAAG,QAAQ,EAAE,YAAY,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;oBACjF,IAAI,QAAQ,CAAC,MAAM,IAAI,GAAG,EAAE;wBAC1B,OAAO,QAAQ,CAAC;qBACjB;yBAAM,IAAI,QAAQ,CAAC,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,MAAM,GAAG,GAAG,EAAE;wBAC1D,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;qBACxB;yBAAM;wBACL,MAAM,QAAQ,CAAC;qBAChB;gBACH,CAAC,CAAC;gBACF,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,CACxB,UAAU,CAAC,MAAM,EAAE,aAAa,CAAC,SAAS,EAAE,oBAAoB,CAAC,CAClE;aACF,CAAC,CAAC;QACL,CAAC;QAED,WAAW,CAAC,UAAe,EAAE;YAC3B,MAAM,OAAO,GAAG,cAAc,CAAC;YAE/B,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QAClE,CAAC;QAED,UAAU,CAAC,UAAe,EAAE;YAC1B,MAAM,OAAO,GAAG,aAAa,CAAC;YAE9B,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QAClE,CAAC;QAED,aAAa,CAAC,IAA6B,EAAE,UAAe,EAAE;YAC5D,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,aAAa,CAAC;YAE9B,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QAClE,CAAC;QAED,kBAAkB,CAAC,IAAsB,EAAE,MAAgB,EAAE,QAAiB,EAAE,UAAe,EAAE;YAC/F,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,iCAAiC,CAAC;YAElD,MAAM,WAAW,GAAG;gBAClB,MAAM,EAAE,MAAM;gBACd,QAAQ,EAAE,QAAQ;aACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,kBAAkB,CAAC,IAAsB,EAAE,MAAgB,EAAE,QAAiB,EAAE,UAAe,EAAE;YAC/F,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,iCAAiC,CAAC;YAElD,MAAM,WAAW,GAAG;gBAClB,MAAM,EAAE,MAAM;gBACd,QAAQ,EAAE,QAAQ;aACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,iBAAiB,CAAC,IAAqB,EAAE,MAAgB,EAAE,QAAiB,EAAE,UAAe,EAAE;YAC7F,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,gCAAgC,CAAC;YAEjD,MAAM,WAAW,GAAG;gBAClB,MAAM,EAAE,MAAM;gBACd,QAAQ,EAAE,QAAQ;aACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,oBAAoB,CAAC,IAAwB,EAAE,MAAgB,EAAE,QAAiB,EAAE,IAAc,EAAE,UAAe,EAAE;YACnH,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,mCAAmC,CAAC;YAEpD,MAAM,WAAW,GAAG;gBAClB,MAAM,EAAE,MAAM;gBACd,QAAQ,EAAE,QAAQ;gBAClB,IAAI,EAAE,IAAI;aACJ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,+BAA+B,CAAC,IAAmC,EAAE,MAAgB,EAAE,QAAiB,EAAE,UAAe,EAAE;YACzH,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,8CAA8C,CAAC;YAE/D,MAAM,WAAW,GAAG;gBAClB,MAAM,EAAE,MAAM;gBACd,QAAQ,EAAE,QAAQ;aACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,sBAAsB,CAAC,IAA0B,EAAE,MAAgB,EAAE,QAAiB,EAAE,UAAe,EAAE;YACvG,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,qCAAqC,CAAC;YAEtD,MAAM,WAAW,GAAG;gBAClB,MAAM,EAAE,MAAM;gBACd,QAAQ,EAAE,QAAQ;aACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,kBAAkB,CAAC,IAAsB,EAAE,MAAgB,EAAE,QAAiB,EAAE,UAAe,EAAE;YAC/F,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,iCAAiC,CAAC;YAElD,MAAM,WAAW,GAAG;gBAClB,MAAM,EAAE,MAAM;gBACd,QAAQ,EAAE,QAAQ;aACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,iBAAiB,CAAC,IAAqB,EAAE,MAAgB,EAAE,QAAiB,EAAE,UAAe,EAAE;YAC7F,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,gCAAgC,CAAC;YAEjD,MAAM,WAAW,GAAG;gBAClB,MAAM,EAAE,MAAM;gBACd,QAAQ,EAAE,QAAQ;aACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,UAAU,CAAC,IAAsB,EAAE,UAAe,EAAE;YAClD,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,yBAAyB,CAAC;YAE1C,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,UAAU,CAAC,IAAsB,EAAE,UAAe,EAAE;YAClD,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,yBAAyB,CAAC;YAE1C,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,SAAS,CAAC,IAAqB,EAAE,UAAe,EAAE;YAChD,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,wBAAwB,CAAC;YAEzC,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,YAAY,CAAC,IAAwB,EAAE,IAAc,EAAE,UAAe,EAAE;YACtE,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,2BAA2B,CAAC;YAE5C,MAAM,WAAW,GAAG;gBAClB,IAAI,EAAE,IAAI;aACJ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,uBAAuB,CAAC,IAAmC,EAAE,UAAe,EAAE;YAC5E,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,sCAAsC,CAAC;YAEvD,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,cAAc,CAAC,IAA0B,EAAE,UAAe,EAAE;YAC1D,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,6BAA6B,CAAC;YAE9C,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,UAAU,CAAC,IAAsB,EAAE,UAAe,EAAE;YAClD,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,yBAAyB,CAAC;YAE1C,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,SAAS,CAAC,IAAqB,EAAE,UAAe,EAAE;YAChD,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,wBAAwB,CAAC;YAEzC,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,YAAY,CAAC,IAAsB,EAAE,UAAe,EAAE;YACpD,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,2BAA2B,CAAC;YAE5C,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,YAAY,CAAC,IAAsB,EAAE,UAAe,EAAE;YACpD,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,2BAA2B,CAAC;YAE5C,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,WAAW,CAAC,IAAqB,EAAE,UAAe,EAAE;YAClD,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,0BAA0B,CAAC;YAE3C,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,cAAc,CAAC,IAAwB,EAAE,UAAe,EAAE;YACxD,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,6BAA6B,CAAC;YAE9C,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,yBAAyB,CAAC,IAAmC,EAAE,UAAe,EAAE;YAC9E,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,wCAAwC,CAAC;YAEzD,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,gBAAgB,CAAC,IAA0B,EAAE,UAAe,EAAE;YAC5D,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,+BAA+B,CAAC;YAEhD,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,YAAY,CAAC,IAAsB,EAAE,UAAe,EAAE;YACpD,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,2BAA2B,CAAC;YAE5C,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,WAAW,CAAC,IAAqB,EAAE,UAAe,EAAE;YAClD,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,0BAA0B,CAAC;YAE3C,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,mBAAmB,CAAC,SAAiB,EAAE,KAAc,EAAE,OAAiB,EAAE,MAAe,EAAE,UAAe,EAAE;YAC1G,IAAI,SAAS,KAAK,IAAI,IAAI,SAAS,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,+DAA+D,CAAC,CAAC;aAClF;YACD,MAAM,OAAO,GAAG,0BAA0B;iBACtC,OAAO,CAAC,cAAc,EAAE,kBAAkB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAEnE,MAAM,WAAW,GAAG;gBAClB,KAAK,EAAE,KAAK;gBACZ,OAAO,EAAE,OAAO;gBAChB,MAAM,EAAE,MAAM;aACR,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QAClE,CAAC;QAED,KAAK,CAAC,IAAc,EAAE,UAAe,EAAE;YACrC,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,WAAW,CAAC;YAE5B,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,aAAa,CAAC,GAAmB,EAAE,SAAyB,EAAE,UAAe,EAAE;YAC7E,MAAM,OAAO,GAAG,YAAY,CAAC;YAE7B,MAAM,WAAW,GAAG;gBAClB,GAAG,EAAE,GAAG;gBACR,SAAS,EAAE,SAAS;aACd,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACrE,CAAC;QAED,WAAW,CAAC,KAAc,EAAE,KAAc,EAAE,MAAe,EAAE,UAAe,EAAE;YAC5E,MAAM,OAAO,GAAG,YAAY,CAAC;YAE7B,MAAM,WAAW,GAAG;gBAClB,KAAK,EAAE,KAAK;gBACZ,KAAK,EAAE,KAAK;gBACZ,MAAM,EAAE,MAAM;aACR,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QAClE,CAAC;QAED,UAAU,CAAC,GAAmB,EAAE,SAAyB,EAAE,UAAe,EAAE;YAC1E,MAAM,OAAO,GAAG,YAAY,CAAC;YAE7B,MAAM,WAAW,GAAG;gBAClB,GAAG,EAAE,GAAG;gBACR,SAAS,EAAE,SAAS;aACd,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,YAAY,CAAC,GAAmB,EAAE,SAAyB,EAAE,UAAe,EAAE;YAC5E,MAAM,OAAO,GAAG,kBAAkB,CAAC;YAEnC,MAAM,WAAW,GAAG;gBAClB,GAAG,EAAE,GAAG;gBACR,SAAS,EAAE,SAAS;aACd,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,qBAAqB,CAAC,IAAwB,EAAE,KAAe,EAAE,UAAe,EAAE;YAChF,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,qBAAqB,CAAC;YAEtC,MAAM,WAAW,GAAG;gBAClB,KAAK,EAAE,KAAK;aACN,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,UAAU,CAAC,IAAa,EAAE,MAAe,EAAE,KAAc,EAAE,UAAe,EAAE;YAC1E,MAAM,OAAO,GAAG,WAAW,CAAC;YAE5B,MAAM,WAAW,GAAG;gBAClB,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,MAAM;gBACd,KAAK,EAAE,KAAK;aACN,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QAClE,CAAC;QAED,WAAW,CAAC,IAA2B,EAAE,UAAe,EAAE;YACxD,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,WAAW,CAAC;YAE5B,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,WAAW,CAAC,OAAe,EAAE,UAAe,EAAE;YAC5C,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAC;aAChF;YACD,MAAM,OAAO,GAAG,sBAAsB;iBAClC,OAAO,CAAC,YAAY,EAAE,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAE/D,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACrE,CAAC;QAED,WAAW,CAAC,OAAe,EAAE,IAA2B,EAAE,UAAe,EAAE;YACzE,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAC;aAChF;YACD,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,sBAAsB;iBAClC,OAAO,CAAC,YAAY,EAAE,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAE/D,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QAClE,CAAC;QAED,aAAa,CAAC,OAAe,EAAE,OAAuB,EAAE,UAAe,EAAE;YACvE,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAC;aAChF;YACD,MAAM,OAAO,GAAG,0BAA0B;iBACtC,OAAO,CAAC,YAAY,EAAE,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAE/D,MAAM,WAAW,GAAG;gBAClB,QAAQ,EAAE,OAAO;aACX,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,aAAa,CAAC,OAAe,EAAE,OAAuB,EAAE,UAAe,EAAE;YACvE,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAC;aAChF;YACD,MAAM,OAAO,GAAG,0BAA0B;iBACtC,OAAO,CAAC,YAAY,EAAE,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAE/D,MAAM,WAAW,GAAG;gBAClB,QAAQ,EAAE,OAAO;aACX,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,SAAS,CAAC,OAAe,EAAE,UAAe,EAAE;YAC1C,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAC;aAChF;YACD,MAAM,OAAO,GAAG,2BAA2B;iBACvC,OAAO,CAAC,YAAY,EAAE,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAE/D,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,cAAc,CAAC,OAAe,EAAE,OAAuB,EAAE,UAAe,EAAE;YACxE,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAC;aAChF;YACD,MAAM,OAAO,GAAG,2BAA2B;iBACvC,OAAO,CAAC,YAAY,EAAE,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAE/D,MAAM,WAAW,GAAG;gBAClB,QAAQ,EAAE,OAAO;aACX,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,UAAU,CAAC,OAAe,EAAE,UAAe,EAAE;YAC3C,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAC;aAChF;YACD,MAAM,OAAO,GAAG,4BAA4B;iBACxC,OAAO,CAAC,YAAY,EAAE,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAE/D,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,iBAAiB,CAAC,OAAe,EAAE,OAAuB,EAAE,UAAe,EAAE;YAC3E,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAC;aAChF;YACD,MAAM,OAAO,GAAG,8BAA8B;iBAC1C,OAAO,CAAC,YAAY,EAAE,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAE/D,MAAM,WAAW,GAAG;gBAClB,QAAQ,EAAE,OAAO;aACX,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,cAAc,CAAC,OAAe,EAAE,KAAc,EAAE,KAAc,EAAE,MAAe,EAAE,UAAe,EAAE;YAChG,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAC;aAChF;YACD,MAAM,OAAO,GAAG,2BAA2B;iBACvC,OAAO,CAAC,YAAY,EAAE,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAE/D,MAAM,WAAW,GAAG;gBAClB,KAAK,EAAE,KAAK;gBACZ,KAAK,EAAE,KAAK;gBACZ,MAAM,EAAE,MAAM;aACR,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QAClE,CAAC;QAED,uBAAuB,CAAC,aAAqB,EAAE,UAAe,EAAE;YAC9D,IAAI,aAAa,KAAK,IAAI,IAAI,aAAa,KAAK,SAAS,EAAE;gBACzD,MAAM,IAAI,KAAK,CAAC,mEAAmE,CAAC,CAAC;aACtF;YACD,MAAM,OAAO,GAAG,kCAAkC;iBAC9C,OAAO,CAAC,kBAAkB,EAAE,kBAAkB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YAE3E,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACrE,CAAC;QAED,sBAAsB,CAAC,aAAqB,EAAE,QAAwB,EAAE,KAAc,EAAE,MAAe,EAAE,MAAe,EAAE,UAAe,EAAE;YACzI,IAAI,aAAa,KAAK,IAAI,IAAI,aAAa,KAAK,SAAS,EAAE;gBACzD,MAAM,IAAI,KAAK,CAAC,mEAAmE,CAAC,CAAC;aACtF;YACD,MAAM,OAAO,GAAG,kCAAkC;iBAC9C,OAAO,CAAC,kBAAkB,EAAE,kBAAkB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YAE3E,MAAM,WAAW,GAAG;gBAClB,SAAS,EAAE,QAAQ;gBACnB,KAAK,EAAE,KAAK;gBACZ,MAAM,EAAE,MAAM;gBACd,MAAM,EAAE,MAAM;aACR,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QAClE,CAAC;QAED,sBAAsB,CAAC,aAAqB,EAAE,IAAyD,EAAE,UAAe,EAAE;YACxH,IAAI,aAAa,KAAK,IAAI,IAAI,aAAa,KAAK,SAAS,EAAE;gBACzD,MAAM,IAAI,KAAK,CAAC,mEAAmE,CAAC,CAAC;aACtF;YACD,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,kCAAkC;iBAC9C,OAAO,CAAC,kBAAkB,EAAE,kBAAkB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YAE3E,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,iCAAiC,CAAC,aAAqB,EAAE,OAAe,EAAE,KAAc,EAAE,MAAe,EAAE,UAAe,EAAE;YAC1H,IAAI,aAAa,KAAK,IAAI,IAAI,aAAa,KAAK,SAAS,EAAE;gBACzD,MAAM,IAAI,KAAK,CAAC,mEAAmE,CAAC,CAAC;aACtF;YACD,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAC;aAChF;YACD,MAAM,OAAO,GAAG,mDAAmD;iBAC/D,OAAO,CAAC,kBAAkB,EAAE,kBAAkB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;iBACtE,OAAO,CAAC,YAAY,EAAE,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAE/D,MAAM,WAAW,GAAG;gBAClB,KAAK,EAAE,KAAK;gBACZ,MAAM,EAAE,MAAM;aACR,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QAClE,CAAC;QAED,WAAW,CAAC,KAAc,EAAE,aAAuB,EAAE,KAAc,EAAE,OAAgB,EAAE,OAAgB,EAAE,KAAc,EAAE,UAAe,EAAE;YACxI,MAAM,OAAO,GAAG,WAAW,CAAC;YAE5B,MAAM,WAAW,GAAG;gBAClB,KAAK,EAAE,KAAK;gBACZ,aAAa,EAAE,aAAa;gBAC5B,KAAK,EAAE,KAAK;gBACZ,QAAQ,EAAE,OAAO;gBACjB,QAAQ,EAAE,OAAO;gBACjB,KAAK,EAAE,KAAK;aACN,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QAClE,CAAC;QAED,mBAAmB,CAAC,GAAmB,EAAE,UAAe,EAAE;YACxD,MAAM,OAAO,GAAG,kBAAkB,CAAC;YAEnC,MAAM,WAAW,GAAG;gBAClB,GAAG,EAAE,GAAG;aACF,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACrE,CAAC;QAED,iBAAiB,CAAC,KAAc,EAAE,eAAwB,EAAE,UAAe,EAAE;YAC3E,MAAM,OAAO,GAAG,kBAAkB,CAAC;YAEnC,MAAM,WAAW,GAAG;gBAClB,KAAK,EAAE,KAAK;gBACZ,gBAAgB,EAAE,eAAe;aAC3B,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QAClE,CAAC;QAED,QAAQ,CAAC,EAAU,EAAE,OAAgB,EAAE,OAAgB,EAAE,UAAe,EAAE;YACxE,IAAI,EAAE,KAAK,IAAI,IAAI,EAAE,KAAK,SAAS,EAAE;gBACnC,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;aAC3E;YACD,MAAM,OAAO,GAAG,cAAc;iBAC1B,OAAO,CAAC,MAAM,EAAE,kBAAkB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAEpD,MAAM,WAAW,GAAG;gBAClB,OAAO,EAAE,OAAO;gBAChB,QAAQ,EAAE,OAAO;aACX,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QAClE,CAAC;QAED,OAAO,CAAC,EAAU,EAAE,IAAY,EAAE,UAAe,EAAE;YACjD,IAAI,EAAE,KAAK,IAAI,IAAI,EAAE,KAAK,SAAS,EAAE;gBACnC,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;aAC3E;YACD,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,cAAc;iBAC1B,OAAO,CAAC,MAAM,EAAE,kBAAkB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAEpD,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,kBAAkB,CAAC,IAAkC,EAAE,UAAe,EAAE;YACtE,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,aAAa,CAAC;YAE9B,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,mBAAmB,CAAC,IAAmC,EAAE,UAAe,EAAE;YACxE,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,aAAa,CAAC;YAE9B,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QAClE,CAAC;QAED,oBAAoB,CAAC,IAAoC,EAAE,UAAe,EAAE;YAC1E,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,oBAAoB,CAAC;YAErC,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QAClE,CAAC;QAED,kBAAkB,CAAC,UAAkB,EAAE,MAAe,EAAE,KAAc,EAAE,MAAe,EAAE,UAAe,EAAE;YACxG,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACnD,MAAM,IAAI,KAAK,CAAC,gEAAgE,CAAC,CAAC;aACnF;YACD,MAAM,OAAO,GAAG,0BAA0B;iBACtC,OAAO,CAAC,cAAc,EAAE,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAEpE,MAAM,WAAW,GAAG;gBAClB,OAAO,EAAE,MAAM;gBACf,KAAK,EAAE,KAAK;gBACZ,MAAM,EAAE,MAAM;aACR,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QAClE,CAAC;QAED,mBAAmB,CAAC,UAAkB,EAAE,MAAc,EAAE,KAAc,EAAE,MAAe,EAAE,UAAe,EAAE;YACxG,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACnD,MAAM,IAAI,KAAK,CAAC,gEAAgE,CAAC,CAAC;aACnF;YACD,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,SAAS,EAAE;gBAC3C,MAAM,IAAI,KAAK,CAAC,4DAA4D,CAAC,CAAC;aAC/E;YACD,MAAM,OAAO,GAAG,oCAAoC;iBAChD,OAAO,CAAC,cAAc,EAAE,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;iBAC/D,OAAO,CAAC,WAAW,EAAE,kBAAkB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAE7D,MAAM,WAAW,GAAG;gBAClB,KAAK,EAAE,KAAK;gBACZ,MAAM,EAAE,MAAM;aACR,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QAClE,CAAC;QAED,eAAe,CAAC,aAAsB,EAAE,WAAoB,EAAE,SAAkB,EAAE,OAAgB,EAAE,KAAc,EAAE,MAAe,EAAE,UAAe,EAAE;YACpJ,MAAM,OAAO,GAAG,gBAAgB,CAAC;YAEjC,MAAM,WAAW,GAAG;gBAClB,cAAc,EAAE,aAAa;gBAC7B,YAAY,EAAE,WAAW;gBACzB,UAAU,EAAE,SAAS;gBACrB,QAAQ,EAAE,OAAO;gBACjB,KAAK,EAAE,KAAK;gBACZ,MAAM,EAAE,MAAM;aACR,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QAClE,CAAC;QAED,qBAAqB,CAAC,YAAoB,EAAE,QAAwB,EAAE,KAAc,EAAE,MAAe,EAAE,MAAe,EAAE,UAAe,EAAE;YACvI,IAAI,YAAY,KAAK,IAAI,IAAI,YAAY,KAAK,SAAS,EAAE;gBACvD,MAAM,IAAI,KAAK,CAAC,kEAAkE,CAAC,CAAC;aACrF;YACD,MAAM,OAAO,GAAG,gCAAgC;iBAC5C,OAAO,CAAC,iBAAiB,EAAE,kBAAkB,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAEzE,MAAM,WAAW,GAAG;gBAClB,SAAS,EAAE,QAAQ;gBACnB,KAAK,EAAE,KAAK;gBACZ,MAAM,EAAE,MAAM;gBACd,MAAM,EAAE,MAAM;aACR,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QAClE,CAAC;QAED,qBAAqB,CAAC,YAAoB,EAAE,IAAuD,EAAE,UAAe,EAAE;YACpH,IAAI,YAAY,KAAK,IAAI,IAAI,YAAY,KAAK,SAAS,EAAE;gBACvD,MAAM,IAAI,KAAK,CAAC,kEAAkE,CAAC,CAAC;aACrF;YACD,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,MAAM,OAAO,GAAG,gCAAgC;iBAC5C,OAAO,CAAC,iBAAiB,EAAE,kBAAkB,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAEzE,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QAClE,CAAC;QAED,cAAc,CAAC,YAAoB,EAAE,UAAe,EAAE;YACpD,IAAI,YAAY,KAAK,IAAI,IAAI,YAAY,KAAK,SAAS,EAAE;gBACvD,MAAM,IAAI,KAAK,CAAC,kEAAkE,CAAC,CAAC;aACrF;YACD,MAAM,OAAO,GAAG,qCAAqC;iBACjD,OAAO,CAAC,iBAAiB,EAAE,kBAAkB,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAEzE,MAAM,WAAW,GAAG,EACZ,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QACnE,CAAC;QAED,gCAAgC,CAAC,YAAoB,EAAE,OAAe,EAAE,KAAc,EAAE,MAAe,EAAE,UAAe,EAAE;YACxH,IAAI,YAAY,KAAK,IAAI,IAAI,YAAY,KAAK,SAAS,EAAE;gBACvD,MAAM,IAAI,KAAK,CAAC,kEAAkE,CAAC,CAAC;aACrF;YACD,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAC;aAChF;YACD,MAAM,OAAO,GAAG,iDAAiD;iBAC7D,OAAO,CAAC,iBAAiB,EAAE,kBAAkB,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;iBACpE,OAAO,CAAC,YAAY,EAAE,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAE/D,MAAM,WAAW,GAAG;gBAClB,KAAK,EAAE,KAAK;gBACZ,MAAM,EAAE,MAAM;aACR,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QAClE,CAAC;QAED,QAAQ,CAAC,GAAmB,EAAE,SAAyB,EAAE,WAA2B,EAAE,UAAe,EAAE;YACrG,MAAM,OAAO,GAAG,UAAU,CAAC;YAE3B,MAAM,WAAW,GAAG;gBAClB,GAAG,EAAE,GAAG;gBACR,SAAS,EAAE,SAAS;gBACpB,YAAY,EAAE,WAAW;aACnB,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QAClE,CAAC;QAED,cAAc,CAAC,MAAc,EAAE,KAAc,EAAE,KAAc,EAAE,MAAe,EAAE,UAAe,EAAE;YAC/F,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,SAAS,EAAE;gBAC3C,MAAM,IAAI,KAAK,CAAC,4DAA4D,CAAC,CAAC;aAC/E;YACD,MAAM,OAAO,GAAG,0BAA0B;iBACtC,OAAO,CAAC,WAAW,EAAE,kBAAkB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAE7D,MAAM,WAAW,GAAG;gBAClB,KAAK,EAAE,KAAK;gBACZ,KAAK,EAAE,KAAK;gBACZ,MAAM,EAAE,MAAM;aACR,CAAC;YAET,IAAI,KAAK,GAAG,IAAI,CAAC;YAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QAClE,CAAC;KACF,CAAC;IAEF,OAAO,IAAI,CAAC;AACd,CAAC,CAAC\"}","code":"const BASE_PATH = \"http://127.0.0.1:80\";\r\nexport const NakamaApi = (configuration = {\r\n    basePath: BASE_PATH,\r\n    bearerToken: \"\",\r\n    password: \"\",\r\n    username: \"\",\r\n    timeoutMs: 5000,\r\n}) => {\r\n    const napi = {\r\n        doFetch(urlPath, method, queryParams, body, options) {\r\n            const urlQuery = \"?\" + Object.keys(queryParams)\r\n                .map(k => {\r\n                if (queryParams[k] instanceof Array) {\r\n                    return queryParams[k].reduce((prev, curr) => {\r\n                        return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                    }, \"\");\r\n                }\r\n                else {\r\n                    if (queryParams[k] != null) {\r\n                        return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                    }\r\n                }\r\n            })\r\n                .join(\"\");\r\n            const fetchOptions = Object.assign({ method: method }, options);\r\n            fetchOptions.headers = Object.assign({}, options.headers);\r\n            if (configuration.bearerToken) {\r\n                fetchOptions.headers[\"Authorization\"] = \"Bearer \" + configuration.bearerToken;\r\n            }\r\n            else if (configuration.username) {\r\n                fetchOptions.headers[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\r\n            }\r\n            if (!Object.keys(fetchOptions.headers).includes(\"Accept\")) {\r\n                fetchOptions.headers[\"Accept\"] = \"application/json\";\r\n            }\r\n            if (!Object.keys(fetchOptions.headers).includes(\"Content-Type\")) {\r\n                fetchOptions.headers[\"Content-Type\"] = \"application/json\";\r\n            }\r\n            Object.keys(fetchOptions.headers).forEach((key) => {\r\n                if (!fetchOptions.headers[key]) {\r\n                    delete fetchOptions.headers[key];\r\n                }\r\n            });\r\n            fetchOptions.body = body;\r\n            return Promise.race([\r\n                fetch(configuration.basePath + urlPath + urlQuery, fetchOptions).then((response) => {\r\n                    if (response.status == 204) {\r\n                        return response;\r\n                    }\r\n                    else if (response.status >= 200 && response.status < 300) {\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        throw response;\r\n                    }\r\n                }),\r\n                new Promise((_, reject) => setTimeout(reject, configuration.timeoutMs, \"Request timed out.\")),\r\n            ]);\r\n        },\r\n        healthcheck(options = {}) {\r\n            const urlPath = \"/healthcheck\";\r\n            const queryParams = {};\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"GET\", queryParams, _body, options);\r\n        },\r\n        getAccount(options = {}) {\r\n            const urlPath = \"/v2/account\";\r\n            const queryParams = {};\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"GET\", queryParams, _body, options);\r\n        },\r\n        updateAccount(body, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/account\";\r\n            const queryParams = {};\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"PUT\", queryParams, _body, options);\r\n        },\r\n        authenticateCustom(body, create, username, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/account/authenticate/custom\";\r\n            const queryParams = {\r\n                create: create,\r\n                username: username,\r\n            };\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        authenticateDevice(body, create, username, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/account/authenticate/device\";\r\n            const queryParams = {\r\n                create: create,\r\n                username: username,\r\n            };\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        authenticateEmail(body, create, username, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/account/authenticate/email\";\r\n            const queryParams = {\r\n                create: create,\r\n                username: username,\r\n            };\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        authenticateFacebook(body, create, username, sync, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/account/authenticate/facebook\";\r\n            const queryParams = {\r\n                create: create,\r\n                username: username,\r\n                sync: sync,\r\n            };\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        authenticateFacebookInstantGame(body, create, username, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/account/authenticate/facebookinstantgame\";\r\n            const queryParams = {\r\n                create: create,\r\n                username: username,\r\n            };\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        authenticateGameCenter(body, create, username, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/account/authenticate/gamecenter\";\r\n            const queryParams = {\r\n                create: create,\r\n                username: username,\r\n            };\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        authenticateGoogle(body, create, username, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/account/authenticate/google\";\r\n            const queryParams = {\r\n                create: create,\r\n                username: username,\r\n            };\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        authenticateSteam(body, create, username, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/account/authenticate/steam\";\r\n            const queryParams = {\r\n                create: create,\r\n                username: username,\r\n            };\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        linkCustom(body, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/account/link/custom\";\r\n            const queryParams = {};\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        linkDevice(body, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/account/link/device\";\r\n            const queryParams = {};\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        linkEmail(body, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/account/link/email\";\r\n            const queryParams = {};\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        linkFacebook(body, sync, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/account/link/facebook\";\r\n            const queryParams = {\r\n                sync: sync,\r\n            };\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        linkFacebookInstantGame(body, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/account/link/facebookinstantgame\";\r\n            const queryParams = {};\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        linkGameCenter(body, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/account/link/gamecenter\";\r\n            const queryParams = {};\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        linkGoogle(body, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/account/link/google\";\r\n            const queryParams = {};\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        linkSteam(body, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/account/link/steam\";\r\n            const queryParams = {};\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        unlinkCustom(body, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/account/unlink/custom\";\r\n            const queryParams = {};\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        unlinkDevice(body, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/account/unlink/device\";\r\n            const queryParams = {};\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        unlinkEmail(body, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/account/unlink/email\";\r\n            const queryParams = {};\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        unlinkFacebook(body, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/account/unlink/facebook\";\r\n            const queryParams = {};\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        unlinkFacebookInstantGame(body, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/account/unlink/facebookinstantgame\";\r\n            const queryParams = {};\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        unlinkGameCenter(body, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/account/unlink/gamecenter\";\r\n            const queryParams = {};\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        unlinkGoogle(body, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/account/unlink/google\";\r\n            const queryParams = {};\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        unlinkSteam(body, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/account/unlink/steam\";\r\n            const queryParams = {};\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        listChannelMessages(channelId, limit, forward, cursor, options = {}) {\r\n            if (channelId === null || channelId === undefined) {\r\n                throw new Error(\"'channelId' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/channel/{channel_id}\"\r\n                .replace(\"{channel_id}\", encodeURIComponent(String(channelId)));\r\n            const queryParams = {\r\n                limit: limit,\r\n                forward: forward,\r\n                cursor: cursor,\r\n            };\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"GET\", queryParams, _body, options);\r\n        },\r\n        event(body, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/event\";\r\n            const queryParams = {};\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        deleteFriends(ids, usernames, options = {}) {\r\n            const urlPath = \"/v2/friend\";\r\n            const queryParams = {\r\n                ids: ids,\r\n                usernames: usernames,\r\n            };\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"DELETE\", queryParams, _body, options);\r\n        },\r\n        listFriends(limit, state, cursor, options = {}) {\r\n            const urlPath = \"/v2/friend\";\r\n            const queryParams = {\r\n                limit: limit,\r\n                state: state,\r\n                cursor: cursor,\r\n            };\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"GET\", queryParams, _body, options);\r\n        },\r\n        addFriends(ids, usernames, options = {}) {\r\n            const urlPath = \"/v2/friend\";\r\n            const queryParams = {\r\n                ids: ids,\r\n                usernames: usernames,\r\n            };\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        blockFriends(ids, usernames, options = {}) {\r\n            const urlPath = \"/v2/friend/block\";\r\n            const queryParams = {\r\n                ids: ids,\r\n                usernames: usernames,\r\n            };\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        importFacebookFriends(body, reset, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/friend/facebook\";\r\n            const queryParams = {\r\n                reset: reset,\r\n            };\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        listGroups(name, cursor, limit, options = {}) {\r\n            const urlPath = \"/v2/group\";\r\n            const queryParams = {\r\n                name: name,\r\n                cursor: cursor,\r\n                limit: limit,\r\n            };\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"GET\", queryParams, _body, options);\r\n        },\r\n        createGroup(body, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/group\";\r\n            const queryParams = {};\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        deleteGroup(groupId, options = {}) {\r\n            if (groupId === null || groupId === undefined) {\r\n                throw new Error(\"'groupId' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/group/{group_id}\"\r\n                .replace(\"{group_id}\", encodeURIComponent(String(groupId)));\r\n            const queryParams = {};\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"DELETE\", queryParams, _body, options);\r\n        },\r\n        updateGroup(groupId, body, options = {}) {\r\n            if (groupId === null || groupId === undefined) {\r\n                throw new Error(\"'groupId' is a required parameter but is null or undefined.\");\r\n            }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/group/{group_id}\"\r\n                .replace(\"{group_id}\", encodeURIComponent(String(groupId)));\r\n            const queryParams = {};\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"PUT\", queryParams, _body, options);\r\n        },\r\n        addGroupUsers(groupId, userIds, options = {}) {\r\n            if (groupId === null || groupId === undefined) {\r\n                throw new Error(\"'groupId' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/group/{group_id}/add\"\r\n                .replace(\"{group_id}\", encodeURIComponent(String(groupId)));\r\n            const queryParams = {\r\n                user_ids: userIds,\r\n            };\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        banGroupUsers(groupId, userIds, options = {}) {\r\n            if (groupId === null || groupId === undefined) {\r\n                throw new Error(\"'groupId' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/group/{group_id}/ban\"\r\n                .replace(\"{group_id}\", encodeURIComponent(String(groupId)));\r\n            const queryParams = {\r\n                user_ids: userIds,\r\n            };\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        joinGroup(groupId, options = {}) {\r\n            if (groupId === null || groupId === undefined) {\r\n                throw new Error(\"'groupId' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/group/{group_id}/join\"\r\n                .replace(\"{group_id}\", encodeURIComponent(String(groupId)));\r\n            const queryParams = {};\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        kickGroupUsers(groupId, userIds, options = {}) {\r\n            if (groupId === null || groupId === undefined) {\r\n                throw new Error(\"'groupId' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/group/{group_id}/kick\"\r\n                .replace(\"{group_id}\", encodeURIComponent(String(groupId)));\r\n            const queryParams = {\r\n                user_ids: userIds,\r\n            };\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        leaveGroup(groupId, options = {}) {\r\n            if (groupId === null || groupId === undefined) {\r\n                throw new Error(\"'groupId' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/group/{group_id}/leave\"\r\n                .replace(\"{group_id}\", encodeURIComponent(String(groupId)));\r\n            const queryParams = {};\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        promoteGroupUsers(groupId, userIds, options = {}) {\r\n            if (groupId === null || groupId === undefined) {\r\n                throw new Error(\"'groupId' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/group/{group_id}/promote\"\r\n                .replace(\"{group_id}\", encodeURIComponent(String(groupId)));\r\n            const queryParams = {\r\n                user_ids: userIds,\r\n            };\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        listGroupUsers(groupId, limit, state, cursor, options = {}) {\r\n            if (groupId === null || groupId === undefined) {\r\n                throw new Error(\"'groupId' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/group/{group_id}/user\"\r\n                .replace(\"{group_id}\", encodeURIComponent(String(groupId)));\r\n            const queryParams = {\r\n                limit: limit,\r\n                state: state,\r\n                cursor: cursor,\r\n            };\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"GET\", queryParams, _body, options);\r\n        },\r\n        deleteLeaderboardRecord(leaderboardId, options = {}) {\r\n            if (leaderboardId === null || leaderboardId === undefined) {\r\n                throw new Error(\"'leaderboardId' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/leaderboard/{leaderboard_id}\"\r\n                .replace(\"{leaderboard_id}\", encodeURIComponent(String(leaderboardId)));\r\n            const queryParams = {};\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"DELETE\", queryParams, _body, options);\r\n        },\r\n        listLeaderboardRecords(leaderboardId, ownerIds, limit, cursor, expiry, options = {}) {\r\n            if (leaderboardId === null || leaderboardId === undefined) {\r\n                throw new Error(\"'leaderboardId' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/leaderboard/{leaderboard_id}\"\r\n                .replace(\"{leaderboard_id}\", encodeURIComponent(String(leaderboardId)));\r\n            const queryParams = {\r\n                owner_ids: ownerIds,\r\n                limit: limit,\r\n                cursor: cursor,\r\n                expiry: expiry,\r\n            };\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"GET\", queryParams, _body, options);\r\n        },\r\n        writeLeaderboardRecord(leaderboardId, body, options = {}) {\r\n            if (leaderboardId === null || leaderboardId === undefined) {\r\n                throw new Error(\"'leaderboardId' is a required parameter but is null or undefined.\");\r\n            }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/leaderboard/{leaderboard_id}\"\r\n                .replace(\"{leaderboard_id}\", encodeURIComponent(String(leaderboardId)));\r\n            const queryParams = {};\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        listLeaderboardRecordsAroundOwner(leaderboardId, ownerId, limit, expiry, options = {}) {\r\n            if (leaderboardId === null || leaderboardId === undefined) {\r\n                throw new Error(\"'leaderboardId' is a required parameter but is null or undefined.\");\r\n            }\r\n            if (ownerId === null || ownerId === undefined) {\r\n                throw new Error(\"'ownerId' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/leaderboard/{leaderboard_id}/owner/{owner_id}\"\r\n                .replace(\"{leaderboard_id}\", encodeURIComponent(String(leaderboardId)))\r\n                .replace(\"{owner_id}\", encodeURIComponent(String(ownerId)));\r\n            const queryParams = {\r\n                limit: limit,\r\n                expiry: expiry,\r\n            };\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"GET\", queryParams, _body, options);\r\n        },\r\n        listMatches(limit, authoritative, label, minSize, maxSize, query, options = {}) {\r\n            const urlPath = \"/v2/match\";\r\n            const queryParams = {\r\n                limit: limit,\r\n                authoritative: authoritative,\r\n                label: label,\r\n                min_size: minSize,\r\n                max_size: maxSize,\r\n                query: query,\r\n            };\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"GET\", queryParams, _body, options);\r\n        },\r\n        deleteNotifications(ids, options = {}) {\r\n            const urlPath = \"/v2/notification\";\r\n            const queryParams = {\r\n                ids: ids,\r\n            };\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"DELETE\", queryParams, _body, options);\r\n        },\r\n        listNotifications(limit, cacheableCursor, options = {}) {\r\n            const urlPath = \"/v2/notification\";\r\n            const queryParams = {\r\n                limit: limit,\r\n                cacheable_cursor: cacheableCursor,\r\n            };\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"GET\", queryParams, _body, options);\r\n        },\r\n        rpcFunc2(id, payload, httpKey, options = {}) {\r\n            if (id === null || id === undefined) {\r\n                throw new Error(\"'id' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/rpc/{id}\"\r\n                .replace(\"{id}\", encodeURIComponent(String(id)));\r\n            const queryParams = {\r\n                payload: payload,\r\n                http_key: httpKey,\r\n            };\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"GET\", queryParams, _body, options);\r\n        },\r\n        rpcFunc(id, body, options = {}) {\r\n            if (id === null || id === undefined) {\r\n                throw new Error(\"'id' is a required parameter but is null or undefined.\");\r\n            }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/rpc/{id}\"\r\n                .replace(\"{id}\", encodeURIComponent(String(id)));\r\n            const queryParams = {};\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        readStorageObjects(body, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/storage\";\r\n            const queryParams = {};\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        writeStorageObjects(body, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/storage\";\r\n            const queryParams = {};\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"PUT\", queryParams, _body, options);\r\n        },\r\n        deleteStorageObjects(body, options = {}) {\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/storage/delete\";\r\n            const queryParams = {};\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"PUT\", queryParams, _body, options);\r\n        },\r\n        listStorageObjects(collection, userId, limit, cursor, options = {}) {\r\n            if (collection === null || collection === undefined) {\r\n                throw new Error(\"'collection' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/storage/{collection}\"\r\n                .replace(\"{collection}\", encodeURIComponent(String(collection)));\r\n            const queryParams = {\r\n                user_id: userId,\r\n                limit: limit,\r\n                cursor: cursor,\r\n            };\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"GET\", queryParams, _body, options);\r\n        },\r\n        listStorageObjects2(collection, userId, limit, cursor, options = {}) {\r\n            if (collection === null || collection === undefined) {\r\n                throw new Error(\"'collection' is a required parameter but is null or undefined.\");\r\n            }\r\n            if (userId === null || userId === undefined) {\r\n                throw new Error(\"'userId' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/storage/{collection}/{user_id}\"\r\n                .replace(\"{collection}\", encodeURIComponent(String(collection)))\r\n                .replace(\"{user_id}\", encodeURIComponent(String(userId)));\r\n            const queryParams = {\r\n                limit: limit,\r\n                cursor: cursor,\r\n            };\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"GET\", queryParams, _body, options);\r\n        },\r\n        listTournaments(categoryStart, categoryEnd, startTime, endTime, limit, cursor, options = {}) {\r\n            const urlPath = \"/v2/tournament\";\r\n            const queryParams = {\r\n                category_start: categoryStart,\r\n                category_end: categoryEnd,\r\n                start_time: startTime,\r\n                end_time: endTime,\r\n                limit: limit,\r\n                cursor: cursor,\r\n            };\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"GET\", queryParams, _body, options);\r\n        },\r\n        listTournamentRecords(tournamentId, ownerIds, limit, cursor, expiry, options = {}) {\r\n            if (tournamentId === null || tournamentId === undefined) {\r\n                throw new Error(\"'tournamentId' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/tournament/{tournament_id}\"\r\n                .replace(\"{tournament_id}\", encodeURIComponent(String(tournamentId)));\r\n            const queryParams = {\r\n                owner_ids: ownerIds,\r\n                limit: limit,\r\n                cursor: cursor,\r\n                expiry: expiry,\r\n            };\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"GET\", queryParams, _body, options);\r\n        },\r\n        writeTournamentRecord(tournamentId, body, options = {}) {\r\n            if (tournamentId === null || tournamentId === undefined) {\r\n                throw new Error(\"'tournamentId' is a required parameter but is null or undefined.\");\r\n            }\r\n            if (body === null || body === undefined) {\r\n                throw new Error(\"'body' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/tournament/{tournament_id}\"\r\n                .replace(\"{tournament_id}\", encodeURIComponent(String(tournamentId)));\r\n            const queryParams = {};\r\n            let _body = null;\r\n            _body = JSON.stringify(body || {});\r\n            return napi.doFetch(urlPath, \"PUT\", queryParams, _body, options);\r\n        },\r\n        joinTournament(tournamentId, options = {}) {\r\n            if (tournamentId === null || tournamentId === undefined) {\r\n                throw new Error(\"'tournamentId' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/tournament/{tournament_id}/join\"\r\n                .replace(\"{tournament_id}\", encodeURIComponent(String(tournamentId)));\r\n            const queryParams = {};\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"POST\", queryParams, _body, options);\r\n        },\r\n        listTournamentRecordsAroundOwner(tournamentId, ownerId, limit, expiry, options = {}) {\r\n            if (tournamentId === null || tournamentId === undefined) {\r\n                throw new Error(\"'tournamentId' is a required parameter but is null or undefined.\");\r\n            }\r\n            if (ownerId === null || ownerId === undefined) {\r\n                throw new Error(\"'ownerId' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/tournament/{tournament_id}/owner/{owner_id}\"\r\n                .replace(\"{tournament_id}\", encodeURIComponent(String(tournamentId)))\r\n                .replace(\"{owner_id}\", encodeURIComponent(String(ownerId)));\r\n            const queryParams = {\r\n                limit: limit,\r\n                expiry: expiry,\r\n            };\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"GET\", queryParams, _body, options);\r\n        },\r\n        getUsers(ids, usernames, facebookIds, options = {}) {\r\n            const urlPath = \"/v2/user\";\r\n            const queryParams = {\r\n                ids: ids,\r\n                usernames: usernames,\r\n                facebook_ids: facebookIds,\r\n            };\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"GET\", queryParams, _body, options);\r\n        },\r\n        listUserGroups(userId, limit, state, cursor, options = {}) {\r\n            if (userId === null || userId === undefined) {\r\n                throw new Error(\"'userId' is a required parameter but is null or undefined.\");\r\n            }\r\n            const urlPath = \"/v2/user/{user_id}/group\"\r\n                .replace(\"{user_id}\", encodeURIComponent(String(userId)));\r\n            const queryParams = {\r\n                limit: limit,\r\n                state: state,\r\n                cursor: cursor,\r\n            };\r\n            let _body = null;\r\n            return napi.doFetch(urlPath, \"GET\", queryParams, _body, options);\r\n        },\r\n    };\r\n    return napi;\r\n};\r\n//# sourceMappingURL=api.gen.js.map","dts":{"name":"/Users/lugehorsam/nakama-js/packages/nakama-js/.rpt2_cache/placeholder/api.gen.d.ts","writeByteOrderMark":false,"text":"export interface ConfigurationParameters {\r\n    basePath?: string;\r\n    username?: string;\r\n    password?: string;\r\n    bearerToken?: string;\r\n    timeoutMs?: number;\r\n}\r\nexport interface GroupUserListGroupUser {\r\n    state?: number;\r\n    user?: ApiUser;\r\n}\r\nexport interface UserGroupListUserGroup {\r\n    group?: ApiGroup;\r\n    state?: number;\r\n}\r\nexport interface WriteLeaderboardRecordRequestLeaderboardRecordWrite {\r\n    metadata?: string;\r\n    score?: string;\r\n    subscore?: string;\r\n}\r\nexport interface WriteTournamentRecordRequestTournamentRecordWrite {\r\n    metadata?: string;\r\n    score?: string;\r\n    subscore?: string;\r\n}\r\nexport interface ApiAccount {\r\n    custom_id?: string;\r\n    devices?: Array<ApiAccountDevice>;\r\n    disable_time?: string;\r\n    email?: string;\r\n    user?: ApiUser;\r\n    verify_time?: string;\r\n    wallet?: string;\r\n}\r\nexport interface ApiAccountCustom {\r\n    id?: string;\r\n    vars?: Map<string, string>;\r\n}\r\nexport interface ApiAccountDevice {\r\n    id?: string;\r\n    vars?: Map<string, string>;\r\n}\r\nexport interface ApiAccountEmail {\r\n    email?: string;\r\n    password?: string;\r\n    vars?: Map<string, string>;\r\n}\r\nexport interface ApiAccountFacebook {\r\n    token?: string;\r\n    vars?: Map<string, string>;\r\n}\r\nexport interface ApiAccountFacebookInstantGame {\r\n    signed_player_info?: string;\r\n    vars?: Map<string, string>;\r\n}\r\nexport interface ApiAccountGameCenter {\r\n    bundle_id?: string;\r\n    player_id?: string;\r\n    public_key_url?: string;\r\n    salt?: string;\r\n    signature?: string;\r\n    timestamp_seconds?: string;\r\n    vars?: Map<string, string>;\r\n}\r\nexport interface ApiAccountGoogle {\r\n    token?: string;\r\n    vars?: Map<string, string>;\r\n}\r\nexport interface ApiAccountSteam {\r\n    token?: string;\r\n    vars?: Map<string, string>;\r\n}\r\nexport interface ApiChannelMessage {\r\n    channel_id?: string;\r\n    code?: number;\r\n    content?: string;\r\n    create_time?: string;\r\n    group_id?: string;\r\n    message_id?: string;\r\n    persistent?: boolean;\r\n    room_name?: string;\r\n    sender_id?: string;\r\n    update_time?: string;\r\n    user_id_one?: string;\r\n    user_id_two?: string;\r\n    username?: string;\r\n}\r\nexport interface ApiChannelMessageList {\r\n    messages?: Array<ApiChannelMessage>;\r\n    next_cursor?: string;\r\n    prev_cursor?: string;\r\n}\r\nexport interface ApiCreateGroupRequest {\r\n    avatar_url?: string;\r\n    description?: string;\r\n    lang_tag?: string;\r\n    max_count?: number;\r\n    name?: string;\r\n    open?: boolean;\r\n}\r\nexport interface ApiDeleteStorageObjectId {\r\n    collection?: string;\r\n    key?: string;\r\n    version?: string;\r\n}\r\nexport interface ApiDeleteStorageObjectsRequest {\r\n    object_ids?: Array<ApiDeleteStorageObjectId>;\r\n}\r\nexport interface ApiEvent {\r\n    external?: boolean;\r\n    name?: string;\r\n    properties?: Map<string, string>;\r\n    timestamp?: string;\r\n}\r\nexport interface ApiFriend {\r\n    state?: number;\r\n    user?: ApiUser;\r\n}\r\nexport interface ApiFriendList {\r\n    cursor?: string;\r\n    friends?: Array<ApiFriend>;\r\n}\r\nexport interface ApiGroup {\r\n    avatar_url?: string;\r\n    create_time?: string;\r\n    creator_id?: string;\r\n    description?: string;\r\n    edge_count?: number;\r\n    id?: string;\r\n    lang_tag?: string;\r\n    max_count?: number;\r\n    metadata?: string;\r\n    name?: string;\r\n    open?: boolean;\r\n    update_time?: string;\r\n}\r\nexport interface ApiGroupList {\r\n    cursor?: string;\r\n    groups?: Array<ApiGroup>;\r\n}\r\nexport interface ApiGroupUserList {\r\n    cursor?: string;\r\n    group_users?: Array<GroupUserListGroupUser>;\r\n}\r\nexport interface ApiLeaderboardRecord {\r\n    create_time?: string;\r\n    expiry_time?: string;\r\n    leaderboard_id?: string;\r\n    max_num_score?: number;\r\n    metadata?: string;\r\n    num_score?: number;\r\n    owner_id?: string;\r\n    rank?: string;\r\n    score?: string;\r\n    subscore?: string;\r\n    update_time?: string;\r\n    username?: string;\r\n}\r\nexport interface ApiLeaderboardRecordList {\r\n    next_cursor?: string;\r\n    owner_records?: Array<ApiLeaderboardRecord>;\r\n    prev_cursor?: string;\r\n    records?: Array<ApiLeaderboardRecord>;\r\n}\r\nexport interface ApiMatch {\r\n    authoritative?: boolean;\r\n    label?: string;\r\n    match_id?: string;\r\n    size?: number;\r\n}\r\nexport interface ApiMatchList {\r\n    matches?: Array<ApiMatch>;\r\n}\r\nexport interface ApiNotification {\r\n    code?: number;\r\n    content?: string;\r\n    create_time?: string;\r\n    id?: string;\r\n    persistent?: boolean;\r\n    sender_id?: string;\r\n    subject?: string;\r\n}\r\nexport interface ApiNotificationList {\r\n    cacheable_cursor?: string;\r\n    notifications?: Array<ApiNotification>;\r\n}\r\nexport interface ApiReadStorageObjectId {\r\n    collection?: string;\r\n    key?: string;\r\n    user_id?: string;\r\n}\r\nexport interface ApiReadStorageObjectsRequest {\r\n    object_ids?: Array<ApiReadStorageObjectId>;\r\n}\r\nexport interface ApiRpc {\r\n    http_key?: string;\r\n    id?: string;\r\n    payload?: string;\r\n}\r\nexport interface ApiSession {\r\n    created?: boolean;\r\n    token?: string;\r\n}\r\nexport interface ApiStorageObject {\r\n    collection?: string;\r\n    create_time?: string;\r\n    key?: string;\r\n    permission_read?: number;\r\n    permission_write?: number;\r\n    update_time?: string;\r\n    user_id?: string;\r\n    value?: string;\r\n    version?: string;\r\n}\r\nexport interface ApiStorageObjectAck {\r\n    collection?: string;\r\n    key?: string;\r\n    user_id?: string;\r\n    version?: string;\r\n}\r\nexport interface ApiStorageObjectAcks {\r\n    acks?: Array<ApiStorageObjectAck>;\r\n}\r\nexport interface ApiStorageObjectList {\r\n    cursor?: string;\r\n    objects?: Array<ApiStorageObject>;\r\n}\r\nexport interface ApiStorageObjects {\r\n    objects?: Array<ApiStorageObject>;\r\n}\r\nexport interface ApiTournament {\r\n    can_enter?: boolean;\r\n    category?: number;\r\n    create_time?: string;\r\n    description?: string;\r\n    duration?: number;\r\n    end_active?: number;\r\n    end_time?: string;\r\n    id?: string;\r\n    max_num_score?: number;\r\n    max_size?: number;\r\n    metadata?: string;\r\n    next_reset?: number;\r\n    size?: number;\r\n    sort_order?: number;\r\n    start_active?: number;\r\n    start_time?: string;\r\n    title?: string;\r\n}\r\nexport interface ApiTournamentList {\r\n    cursor?: string;\r\n    tournaments?: Array<ApiTournament>;\r\n}\r\nexport interface ApiTournamentRecordList {\r\n    next_cursor?: string;\r\n    owner_records?: Array<ApiLeaderboardRecord>;\r\n    prev_cursor?: string;\r\n    records?: Array<ApiLeaderboardRecord>;\r\n}\r\nexport interface ApiUpdateAccountRequest {\r\n    avatar_url?: string;\r\n    display_name?: string;\r\n    lang_tag?: string;\r\n    location?: string;\r\n    timezone?: string;\r\n    username?: string;\r\n}\r\nexport interface ApiUpdateGroupRequest {\r\n    avatar_url?: string;\r\n    description?: string;\r\n    group_id?: string;\r\n    lang_tag?: string;\r\n    name?: string;\r\n    open?: boolean;\r\n}\r\nexport interface ApiUser {\r\n    avatar_url?: string;\r\n    create_time?: string;\r\n    display_name?: string;\r\n    edge_count?: number;\r\n    facebook_id?: string;\r\n    facebook_instant_game_id?: string;\r\n    gamecenter_id?: string;\r\n    google_id?: string;\r\n    id?: string;\r\n    lang_tag?: string;\r\n    location?: string;\r\n    metadata?: string;\r\n    online?: boolean;\r\n    steam_id?: string;\r\n    timezone?: string;\r\n    update_time?: string;\r\n    username?: string;\r\n}\r\nexport interface ApiUserGroupList {\r\n    cursor?: string;\r\n    user_groups?: Array<UserGroupListUserGroup>;\r\n}\r\nexport interface ApiUsers {\r\n    users?: Array<ApiUser>;\r\n}\r\nexport interface ApiWriteStorageObject {\r\n    collection?: string;\r\n    key?: string;\r\n    permission_read?: number;\r\n    permission_write?: number;\r\n    value?: string;\r\n    version?: string;\r\n}\r\nexport interface ApiWriteStorageObjectsRequest {\r\n    objects?: Array<ApiWriteStorageObject>;\r\n}\r\nexport declare const NakamaApi: (configuration?: ConfigurationParameters) => {\r\n    doFetch(urlPath: string, method: string, queryParams: any, body?: any, options?: any): Promise<any>;\r\n    healthcheck(options?: any): Promise<any>;\r\n    getAccount(options?: any): Promise<ApiAccount>;\r\n    updateAccount(body: ApiUpdateAccountRequest, options?: any): Promise<any>;\r\n    authenticateCustom(body: ApiAccountCustom, create?: boolean, username?: string, options?: any): Promise<ApiSession>;\r\n    authenticateDevice(body: ApiAccountDevice, create?: boolean, username?: string, options?: any): Promise<ApiSession>;\r\n    authenticateEmail(body: ApiAccountEmail, create?: boolean, username?: string, options?: any): Promise<ApiSession>;\r\n    authenticateFacebook(body: ApiAccountFacebook, create?: boolean, username?: string, sync?: boolean, options?: any): Promise<ApiSession>;\r\n    authenticateFacebookInstantGame(body: ApiAccountFacebookInstantGame, create?: boolean, username?: string, options?: any): Promise<ApiSession>;\r\n    authenticateGameCenter(body: ApiAccountGameCenter, create?: boolean, username?: string, options?: any): Promise<ApiSession>;\r\n    authenticateGoogle(body: ApiAccountGoogle, create?: boolean, username?: string, options?: any): Promise<ApiSession>;\r\n    authenticateSteam(body: ApiAccountSteam, create?: boolean, username?: string, options?: any): Promise<ApiSession>;\r\n    linkCustom(body: ApiAccountCustom, options?: any): Promise<any>;\r\n    linkDevice(body: ApiAccountDevice, options?: any): Promise<any>;\r\n    linkEmail(body: ApiAccountEmail, options?: any): Promise<any>;\r\n    linkFacebook(body: ApiAccountFacebook, sync?: boolean, options?: any): Promise<any>;\r\n    linkFacebookInstantGame(body: ApiAccountFacebookInstantGame, options?: any): Promise<any>;\r\n    linkGameCenter(body: ApiAccountGameCenter, options?: any): Promise<any>;\r\n    linkGoogle(body: ApiAccountGoogle, options?: any): Promise<any>;\r\n    linkSteam(body: ApiAccountSteam, options?: any): Promise<any>;\r\n    unlinkCustom(body: ApiAccountCustom, options?: any): Promise<any>;\r\n    unlinkDevice(body: ApiAccountDevice, options?: any): Promise<any>;\r\n    unlinkEmail(body: ApiAccountEmail, options?: any): Promise<any>;\r\n    unlinkFacebook(body: ApiAccountFacebook, options?: any): Promise<any>;\r\n    unlinkFacebookInstantGame(body: ApiAccountFacebookInstantGame, options?: any): Promise<any>;\r\n    unlinkGameCenter(body: ApiAccountGameCenter, options?: any): Promise<any>;\r\n    unlinkGoogle(body: ApiAccountGoogle, options?: any): Promise<any>;\r\n    unlinkSteam(body: ApiAccountSteam, options?: any): Promise<any>;\r\n    listChannelMessages(channelId: string, limit?: number, forward?: boolean, cursor?: string, options?: any): Promise<ApiChannelMessageList>;\r\n    event(body: ApiEvent, options?: any): Promise<any>;\r\n    deleteFriends(ids?: Array<string>, usernames?: Array<string>, options?: any): Promise<any>;\r\n    listFriends(limit?: number, state?: number, cursor?: string, options?: any): Promise<ApiFriendList>;\r\n    addFriends(ids?: Array<string>, usernames?: Array<string>, options?: any): Promise<any>;\r\n    blockFriends(ids?: Array<string>, usernames?: Array<string>, options?: any): Promise<any>;\r\n    importFacebookFriends(body: ApiAccountFacebook, reset?: boolean, options?: any): Promise<any>;\r\n    listGroups(name?: string, cursor?: string, limit?: number, options?: any): Promise<ApiGroupList>;\r\n    createGroup(body: ApiCreateGroupRequest, options?: any): Promise<ApiGroup>;\r\n    deleteGroup(groupId: string, options?: any): Promise<any>;\r\n    updateGroup(groupId: string, body: ApiUpdateGroupRequest, options?: any): Promise<any>;\r\n    addGroupUsers(groupId: string, userIds?: Array<string>, options?: any): Promise<any>;\r\n    banGroupUsers(groupId: string, userIds?: Array<string>, options?: any): Promise<any>;\r\n    joinGroup(groupId: string, options?: any): Promise<any>;\r\n    kickGroupUsers(groupId: string, userIds?: Array<string>, options?: any): Promise<any>;\r\n    leaveGroup(groupId: string, options?: any): Promise<any>;\r\n    promoteGroupUsers(groupId: string, userIds?: Array<string>, options?: any): Promise<any>;\r\n    listGroupUsers(groupId: string, limit?: number, state?: number, cursor?: string, options?: any): Promise<ApiGroupUserList>;\r\n    deleteLeaderboardRecord(leaderboardId: string, options?: any): Promise<any>;\r\n    listLeaderboardRecords(leaderboardId: string, ownerIds?: Array<string>, limit?: number, cursor?: string, expiry?: string, options?: any): Promise<ApiLeaderboardRecordList>;\r\n    writeLeaderboardRecord(leaderboardId: string, body: WriteLeaderboardRecordRequestLeaderboardRecordWrite, options?: any): Promise<ApiLeaderboardRecord>;\r\n    listLeaderboardRecordsAroundOwner(leaderboardId: string, ownerId: string, limit?: number, expiry?: string, options?: any): Promise<ApiLeaderboardRecordList>;\r\n    listMatches(limit?: number, authoritative?: boolean, label?: string, minSize?: number, maxSize?: number, query?: string, options?: any): Promise<ApiMatchList>;\r\n    deleteNotifications(ids?: Array<string>, options?: any): Promise<any>;\r\n    listNotifications(limit?: number, cacheableCursor?: string, options?: any): Promise<ApiNotificationList>;\r\n    rpcFunc2(id: string, payload?: string, httpKey?: string, options?: any): Promise<ApiRpc>;\r\n    rpcFunc(id: string, body: string, options?: any): Promise<ApiRpc>;\r\n    readStorageObjects(body: ApiReadStorageObjectsRequest, options?: any): Promise<ApiStorageObjects>;\r\n    writeStorageObjects(body: ApiWriteStorageObjectsRequest, options?: any): Promise<ApiStorageObjectAcks>;\r\n    deleteStorageObjects(body: ApiDeleteStorageObjectsRequest, options?: any): Promise<any>;\r\n    listStorageObjects(collection: string, userId?: string, limit?: number, cursor?: string, options?: any): Promise<ApiStorageObjectList>;\r\n    listStorageObjects2(collection: string, userId: string, limit?: number, cursor?: string, options?: any): Promise<ApiStorageObjectList>;\r\n    listTournaments(categoryStart?: number, categoryEnd?: number, startTime?: number, endTime?: number, limit?: number, cursor?: string, options?: any): Promise<ApiTournamentList>;\r\n    listTournamentRecords(tournamentId: string, ownerIds?: Array<string>, limit?: number, cursor?: string, expiry?: string, options?: any): Promise<ApiTournamentRecordList>;\r\n    writeTournamentRecord(tournamentId: string, body: WriteTournamentRecordRequestTournamentRecordWrite, options?: any): Promise<ApiLeaderboardRecord>;\r\n    joinTournament(tournamentId: string, options?: any): Promise<any>;\r\n    listTournamentRecordsAroundOwner(tournamentId: string, ownerId: string, limit?: number, expiry?: string, options?: any): Promise<ApiTournamentRecordList>;\r\n    getUsers(ids?: Array<string>, usernames?: Array<string>, facebookIds?: Array<string>, options?: any): Promise<ApiUsers>;\r\n    listUserGroups(userId: string, limit?: number, state?: number, cursor?: string, options?: any): Promise<ApiUserGroupList>;\r\n};\r\n"}}

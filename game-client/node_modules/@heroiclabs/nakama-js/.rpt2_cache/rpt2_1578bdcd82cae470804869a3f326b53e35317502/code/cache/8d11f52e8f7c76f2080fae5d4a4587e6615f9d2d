{"map":"{\"version\":3,\"file\":\"web_socket_adapter.js\",\"sourceRoot\":\"\",\"sources\":[\"../../web_socket_adapter.ts\"],\"names\":[],\"mappings\":\"AAkEA,MAAM,OAAO,oBAAoB;IAAjC;QAEY,iBAAY,GAAY,KAAK,CAAC;IAsE1C,CAAC;IAlEG,IAAI,OAAO;QACP,OAAO,IAAI,CAAC,OAAQ,CAAC,OAAO,CAAC;IACjC,CAAC;IAED,IAAI,OAAO,CAAC,KAAgC;QACxC,IAAI,CAAC,OAAQ,CAAC,OAAO,GAAG,KAAK,CAAC;IAClC,CAAC;IAED,IAAI,OAAO;QACP,OAAO,IAAI,CAAC,OAAQ,CAAC,OAAO,CAAC;IACjC,CAAC;IAED,IAAI,OAAO,CAAC,KAAgC;QACxC,IAAI,CAAC,OAAQ,CAAC,OAAO,GAAG,KAAK,CAAC;IAClC,CAAC;IAED,IAAI,SAAS;QACT,OAAO,IAAI,CAAC,OAAQ,CAAC,SAAS,CAAC;IACnC,CAAC;IAED,IAAI,SAAS,CAAC,KAAkC;QAE5C,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,OAAQ,CAAC,SAAS,GAAG,CAAC,GAAiB,EAAE,EAAE;gBAC5C,MAAM,OAAO,GAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAC1C,KAAM,CAAC,OAAO,CAAC,CAAC;YACpB,CAAC,CAAC;SACL;aACI;YACD,KAAK,GAAG,IAAI,CAAC;SAChB;IACL,CAAC;IAED,IAAI,MAAM;QACN,OAAO,IAAI,CAAC,OAAQ,CAAC,MAAM,CAAC;IAChC,CAAC;IAED,IAAI,MAAM,CAAC,KAA+B;QACtC,IAAI,CAAC,OAAQ,CAAC,MAAM,GAAG,KAAK,CAAC;IACjC,CAAC;IAED,IAAI,WAAW;QACX,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAED,OAAO,CAAC,MAAc,EAAE,IAAY,EAAE,IAAY,EAAE,YAAqB,EAAE,KAAa;QACpF,MAAM,GAAG,GAAG,GAAG,MAAM,GAAG,IAAI,IAAI,IAAI,sBAAsB,kBAAkB,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,UAAU,kBAAkB,CAAC,KAAK,CAAC,EAAE,CAAC;QAC3I,IAAI,CAAC,OAAO,GAAG,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC;QAClC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC7B,CAAC;IAED,KAAK;QACD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,OAAQ,CAAC,KAAK,EAAE,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;IAC7B,CAAC;IAED,IAAI,CAAC,GAAQ;QACT,IAAI,GAAG,CAAC,eAAe,EACvB;YAEI,GAAG,CAAC,eAAe,CAAC,OAAO,GAAG,GAAG,CAAC,eAAe,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;SACxE;QAED,IAAI,CAAC,OAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5C,CAAC;CACJ\"}","code":"export class WebSocketAdapterText {\r\n    constructor() {\r\n        this._isConnected = false;\r\n    }\r\n    get onClose() {\r\n        return this._socket.onclose;\r\n    }\r\n    set onClose(value) {\r\n        this._socket.onclose = value;\r\n    }\r\n    get onError() {\r\n        return this._socket.onerror;\r\n    }\r\n    set onError(value) {\r\n        this._socket.onerror = value;\r\n    }\r\n    get onMessage() {\r\n        return this._socket.onmessage;\r\n    }\r\n    set onMessage(value) {\r\n        if (value) {\r\n            this._socket.onmessage = (evt) => {\r\n                const message = JSON.parse(evt.data);\r\n                value(message);\r\n            };\r\n        }\r\n        else {\r\n            value = null;\r\n        }\r\n    }\r\n    get onOpen() {\r\n        return this._socket.onopen;\r\n    }\r\n    set onOpen(value) {\r\n        this._socket.onopen = value;\r\n    }\r\n    get isConnected() {\r\n        return this._isConnected;\r\n    }\r\n    connect(scheme, host, port, createStatus, token) {\r\n        const url = `${scheme}${host}:${port}/ws?lang=en&status=${encodeURIComponent(createStatus.toString())}&token=${encodeURIComponent(token)}`;\r\n        this._socket = new WebSocket(url);\r\n        this._isConnected = true;\r\n    }\r\n    close() {\r\n        this._isConnected = false;\r\n        this._socket.close();\r\n        this._socket = undefined;\r\n    }\r\n    send(msg) {\r\n        if (msg.match_data_send) {\r\n            msg.match_data_send.op_code = msg.match_data_send.op_code.toString();\r\n        }\r\n        this._socket.send(JSON.stringify(msg));\r\n    }\r\n}\r\n//# sourceMappingURL=web_socket_adapter.js.map","dts":{"name":"/Users/lugehorsam/nakama-js/packages/nakama-js/.rpt2_cache/placeholder/web_socket_adapter.d.ts","writeByteOrderMark":false,"text":"export interface WebSocketAdapter {\r\n    onClose: SocketCloseHandler | null;\r\n    onError: SocketErrorHandler | null;\r\n    onMessage: SocketMessageHandler | null;\r\n    onOpen: SocketOpenHandler | null;\r\n    readonly isConnected: boolean;\r\n    close(): void;\r\n    connect(scheme: string, host: string, port: string, createStatus: boolean, token: string): void;\r\n    send(msg: any): void;\r\n}\r\nexport interface SocketCloseHandler {\r\n    (this: WebSocket, evt: CloseEvent): void;\r\n}\r\nexport interface SocketErrorHandler {\r\n    (this: WebSocket, evt: Event): void;\r\n}\r\nexport interface SocketMessageHandler {\r\n    (message: any): void;\r\n}\r\nexport interface SocketOpenHandler {\r\n    (this: WebSocket, evt: Event): void;\r\n}\r\nexport declare class WebSocketAdapterText implements WebSocketAdapter {\r\n    private _isConnected;\r\n    private _socket?;\r\n    get onClose(): SocketCloseHandler | null;\r\n    set onClose(value: SocketCloseHandler | null);\r\n    get onError(): SocketErrorHandler | null;\r\n    set onError(value: SocketErrorHandler | null);\r\n    get onMessage(): SocketMessageHandler | null;\r\n    set onMessage(value: SocketMessageHandler | null);\r\n    get onOpen(): SocketOpenHandler | null;\r\n    set onOpen(value: SocketOpenHandler | null);\r\n    get isConnected(): boolean;\r\n    connect(scheme: string, host: string, port: string, createStatus: boolean, token: string): void;\r\n    close(): void;\r\n    send(msg: any): void;\r\n}\r\n"}}

{"map":"{\"version\":3,\"file\":\"client.js\",\"sourceRoot\":\"\",\"sources\":[\"../../client.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import { NakamaApi, } from \"./api.gen\";\r\nimport { Session } from \"./session\";\r\nimport { DefaultSocket } from \"./socket\";\r\nimport { WebSocketAdapterText } from \"./web_socket_adapter\";\r\nconst DEFAULT_HOST = \"127.0.0.1\";\r\nconst DEFAULT_PORT = \"7350\";\r\nconst DEFAULT_SERVER_KEY = \"defaultkey\";\r\nconst DEFAULT_TIMEOUT_MS = 7000;\r\nexport class Client {\r\n    constructor(serverkey = DEFAULT_SERVER_KEY, host = DEFAULT_HOST, port = DEFAULT_PORT, useSSL = false, timeout = DEFAULT_TIMEOUT_MS) {\r\n        this.serverkey = serverkey;\r\n        this.host = host;\r\n        this.port = port;\r\n        this.useSSL = useSSL;\r\n        this.timeout = timeout;\r\n        const scheme = (useSSL) ? \"https://\" : \"http://\";\r\n        const basePath = `${scheme}${host}:${port}`;\r\n        this.configuration = {\r\n            basePath: basePath,\r\n            username: serverkey,\r\n            password: \"\",\r\n            timeoutMs: timeout,\r\n        };\r\n        this.apiClient = NakamaApi(this.configuration);\r\n    }\r\n    addGroupUsers(session, groupId, ids) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.addGroupUsers(groupId, ids).then((response) => {\r\n            return response !== undefined;\r\n        });\r\n    }\r\n    addFriends(session, ids, usernames) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        const urlPath = \"/v2/friend\";\r\n        const queryParams = {\r\n            ids: ids,\r\n            usernames: usernames\r\n        };\r\n        const urlQuery = \"?\" + Object.keys(queryParams)\r\n            .map(k => {\r\n            if (queryParams[k] instanceof Array) {\r\n                return queryParams[k].reduce((prev, curr) => {\r\n                    return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                }, \"\");\r\n            }\r\n            else {\r\n                if (queryParams[k] != null) {\r\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                }\r\n            }\r\n        })\r\n            .join(\"\");\r\n        const fetchOptions = Object.assign({ method: \"POST\" });\r\n        const headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        if (this.configuration.bearerToken) {\r\n            headers[\"Authorization\"] = \"Bearer \" + this.configuration.bearerToken;\r\n        }\r\n        else if (this.configuration.username) {\r\n            headers[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\r\n        }\r\n        fetchOptions.headers = Object.assign({}, headers);\r\n        return Promise.race([\r\n            fetch(this.configuration.basePath + urlPath + urlQuery, fetchOptions).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    throw response;\r\n                }\r\n            }),\r\n            new Promise((_, reject) => setTimeout(reject, this.configuration.timeoutMs, \"Request timed out.\")),\r\n        ]).then((response) => {\r\n            return Promise.resolve(response != undefined);\r\n        });\r\n    }\r\n    authenticateCustom(request) {\r\n        const urlPath = \"/v2/account/authenticate/custom\";\r\n        const queryParams = {\r\n            username: request.username,\r\n            create: request.create\r\n        };\r\n        const urlQuery = \"?\" + Object.keys(queryParams)\r\n            .map(k => {\r\n            if (queryParams[k] instanceof Array) {\r\n                return queryParams[k].reduce((prev, curr) => {\r\n                    return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                }, \"\");\r\n            }\r\n            else {\r\n                if (queryParams[k] != null) {\r\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                }\r\n            }\r\n        })\r\n            .join(\"\");\r\n        const fetchOptions = Object.assign({ method: \"POST\" });\r\n        const headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        if (this.configuration.username) {\r\n            headers[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\r\n        }\r\n        fetchOptions.headers = Object.assign({}, headers);\r\n        fetchOptions.body = JSON.stringify({\r\n            id: request.id,\r\n            vars: request.vars\r\n        });\r\n        return Promise.race([\r\n            fetch(this.configuration.basePath + urlPath + urlQuery, fetchOptions).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    throw response;\r\n                }\r\n            }),\r\n            new Promise((_, reject) => setTimeout(reject, this.configuration.timeoutMs, \"Request timed out.\")),\r\n        ]).then((apiSession) => {\r\n            return Session.restore(apiSession.token || \"\");\r\n        });\r\n    }\r\n    authenticateDevice(request) {\r\n        const urlPath = \"/v2/account/authenticate/device\";\r\n        const queryParams = {\r\n            username: request.username,\r\n            create: request.create\r\n        };\r\n        const urlQuery = \"?\" + Object.keys(queryParams)\r\n            .map(k => {\r\n            if (queryParams[k] instanceof Array) {\r\n                return queryParams[k].reduce((prev, curr) => {\r\n                    return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                }, \"\");\r\n            }\r\n            else {\r\n                if (queryParams[k] != null) {\r\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                }\r\n            }\r\n        })\r\n            .join(\"\");\r\n        const fetchOptions = Object.assign({ method: \"POST\" });\r\n        const headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        if (this.configuration.username) {\r\n            headers[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\r\n        }\r\n        fetchOptions.headers = Object.assign({}, headers);\r\n        fetchOptions.body = JSON.stringify({\r\n            id: request.id,\r\n            vars: request.vars\r\n        });\r\n        return Promise.race([\r\n            fetch(this.configuration.basePath + urlPath + urlQuery, fetchOptions).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    throw response;\r\n                }\r\n            }),\r\n            new Promise((_, reject) => setTimeout(reject, this.configuration.timeoutMs, \"Request timed out.\")),\r\n        ]).then((apiSession) => {\r\n            return Session.restore(apiSession.token || \"\");\r\n        });\r\n    }\r\n    authenticateEmail(request) {\r\n        const urlPath = \"/v2/account/authenticate/email\";\r\n        const queryParams = {\r\n            username: request.username,\r\n            create: request.create\r\n        };\r\n        const urlQuery = \"?\" + Object.keys(queryParams)\r\n            .map(k => {\r\n            if (queryParams[k] instanceof Array) {\r\n                return queryParams[k].reduce((prev, curr) => {\r\n                    return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                }, \"\");\r\n            }\r\n            else {\r\n                if (queryParams[k] != null) {\r\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                }\r\n            }\r\n        })\r\n            .join(\"\");\r\n        const fetchOptions = Object.assign({ method: \"POST\" });\r\n        const headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        if (this.configuration.username) {\r\n            headers[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\r\n        }\r\n        fetchOptions.headers = Object.assign({}, headers);\r\n        fetchOptions.body = JSON.stringify({\r\n            email: request.email,\r\n            password: request.password,\r\n            vars: request.vars\r\n        });\r\n        return Promise.race([\r\n            fetch(this.configuration.basePath + urlPath + urlQuery, fetchOptions).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    throw response;\r\n                }\r\n            }),\r\n            new Promise((_, reject) => setTimeout(reject, this.configuration.timeoutMs, \"Request timed out.\")),\r\n        ]).then((apiSession) => {\r\n            return Session.restore(apiSession.token || \"\");\r\n        });\r\n    }\r\n    authenticateFacebookInstantGame(request) {\r\n        return this.apiClient.authenticateFacebookInstantGame({ signed_player_info: request.signed_player_info, vars: request.vars }, request.username, request.create);\r\n    }\r\n    authenticateFacebook(request) {\r\n        const urlPath = \"/v2/account/authenticate/facebook\";\r\n        const queryParams = {\r\n            username: request.username,\r\n            create: request.create\r\n        };\r\n        const urlQuery = \"?\" + Object.keys(queryParams)\r\n            .map(k => {\r\n            if (queryParams[k] instanceof Array) {\r\n                return queryParams[k].reduce((prev, curr) => {\r\n                    return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                }, \"\");\r\n            }\r\n            else {\r\n                if (queryParams[k] != null) {\r\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                }\r\n            }\r\n        })\r\n            .join(\"\");\r\n        const fetchOptions = Object.assign({ method: \"POST\" });\r\n        const headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        if (this.configuration.username) {\r\n            headers[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\r\n        }\r\n        fetchOptions.headers = Object.assign({}, headers);\r\n        fetchOptions.body = JSON.stringify({\r\n            token: request.token,\r\n            vars: request.vars\r\n        });\r\n        return Promise.race([\r\n            fetch(this.configuration.basePath + urlPath + urlQuery, fetchOptions).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    throw response;\r\n                }\r\n            }),\r\n            new Promise((_, reject) => setTimeout(reject, this.configuration.timeoutMs, \"Request timed out.\")),\r\n        ]).then((apiSession) => {\r\n            return Session.restore(apiSession.token || \"\");\r\n        });\r\n    }\r\n    authenticateGoogle(request) {\r\n        const urlPath = \"/v2/account/authenticate/google\";\r\n        const queryParams = {\r\n            username: request.username,\r\n            create: request.create\r\n        };\r\n        const urlQuery = \"?\" + Object.keys(queryParams)\r\n            .map(k => {\r\n            if (queryParams[k] instanceof Array) {\r\n                return queryParams[k].reduce((prev, curr) => {\r\n                    return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                }, \"\");\r\n            }\r\n            else {\r\n                if (queryParams[k] != null) {\r\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                }\r\n            }\r\n        })\r\n            .join(\"\");\r\n        const fetchOptions = Object.assign({ method: \"POST\" });\r\n        const headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        if (this.configuration.username) {\r\n            headers[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\r\n        }\r\n        fetchOptions.headers = Object.assign({}, headers);\r\n        fetchOptions.body = JSON.stringify({\r\n            token: request.token,\r\n            vars: request.vars\r\n        });\r\n        return Promise.race([\r\n            fetch(this.configuration.basePath + urlPath + urlQuery, fetchOptions).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    throw response;\r\n                }\r\n            }),\r\n            new Promise((_, reject) => setTimeout(reject, this.configuration.timeoutMs, \"Request timed out.\")),\r\n        ]).then((apiSession) => {\r\n            return Session.restore(apiSession.token || \"\");\r\n        });\r\n    }\r\n    authenticateGameCenter(request) {\r\n        const urlPath = \"/v2/account/authenticate/gamecenter\";\r\n        const queryParams = {\r\n            username: request.username,\r\n            create: request.create\r\n        };\r\n        const urlQuery = \"?\" + Object.keys(queryParams)\r\n            .map(k => {\r\n            if (queryParams[k] instanceof Array) {\r\n                return queryParams[k].reduce((prev, curr) => {\r\n                    return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                }, \"\");\r\n            }\r\n            else {\r\n                if (queryParams[k] != null) {\r\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                }\r\n            }\r\n        })\r\n            .join(\"\");\r\n        const fetchOptions = Object.assign({ method: \"POST\" });\r\n        const headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        if (this.configuration.username) {\r\n            headers[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\r\n        }\r\n        fetchOptions.headers = Object.assign({}, headers);\r\n        fetchOptions.body = JSON.stringify({\r\n            bundle_id: request.bundle_id,\r\n            player_id: request.player_id,\r\n            public_key_url: request.public_key_url,\r\n            salt: request.salt,\r\n            signature: request.signature,\r\n            timestamp_seconds: request.timestamp_seconds,\r\n            vars: request.vars\r\n        });\r\n        return Promise.race([\r\n            fetch(this.configuration.basePath + urlPath + urlQuery, fetchOptions).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    throw response;\r\n                }\r\n            }),\r\n            new Promise((_, reject) => setTimeout(reject, this.configuration.timeoutMs, \"Request timed out.\")),\r\n        ]).then((apiSession) => {\r\n            return Session.restore(apiSession.token || \"\");\r\n        });\r\n    }\r\n    authenticateSteam(request) {\r\n        const urlPath = \"/v2/account/authenticate/steam\";\r\n        const queryParams = {\r\n            username: request.username,\r\n            create: request.create,\r\n            vars: request.vars\r\n        };\r\n        const urlQuery = \"?\" + Object.keys(queryParams)\r\n            .map(k => {\r\n            if (queryParams[k] instanceof Array) {\r\n                return queryParams[k].reduce((prev, curr) => {\r\n                    return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                }, \"\");\r\n            }\r\n            else {\r\n                if (queryParams[k] != null) {\r\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                }\r\n            }\r\n        })\r\n            .join(\"\");\r\n        const fetchOptions = Object.assign({ method: \"POST\" });\r\n        const headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        if (this.configuration.username) {\r\n            headers[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\r\n        }\r\n        fetchOptions.headers = Object.assign({}, headers);\r\n        fetchOptions.body = JSON.stringify({\r\n            token: request.token\r\n        });\r\n        return Promise.race([\r\n            fetch(this.configuration.basePath + urlPath + urlQuery, fetchOptions).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    throw response;\r\n                }\r\n            }),\r\n            new Promise((_, reject) => setTimeout(reject, this.configuration.timeoutMs, \"Request timed out.\")),\r\n        ]).then((apiSession) => {\r\n            return Session.restore(apiSession.token || \"\");\r\n        });\r\n    }\r\n    banGroupUsers(session, groupId, ids) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.banGroupUsers(groupId, ids).then((response) => {\r\n            return response !== undefined;\r\n        });\r\n    }\r\n    blockFriends(session, ids, usernames) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        const urlPath = \"/v2/friend/block\";\r\n        const queryParams = {\r\n            ids: ids,\r\n            usernames: usernames\r\n        };\r\n        const urlQuery = \"?\" + Object.keys(queryParams)\r\n            .map(k => {\r\n            if (queryParams[k] instanceof Array) {\r\n                return queryParams[k].reduce((prev, curr) => {\r\n                    return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                }, \"\");\r\n            }\r\n            else {\r\n                if (queryParams[k] != null) {\r\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                }\r\n            }\r\n        })\r\n            .join(\"\");\r\n        const fetchOptions = Object.assign({ method: \"POST\" });\r\n        const headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        if (this.configuration.bearerToken) {\r\n            headers[\"Authorization\"] = \"Bearer \" + this.configuration.bearerToken;\r\n        }\r\n        else if (this.configuration.username) {\r\n            headers[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\r\n        }\r\n        fetchOptions.headers = Object.assign({}, headers);\r\n        return Promise.race([\r\n            fetch(this.configuration.basePath + urlPath + urlQuery, fetchOptions).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    throw response;\r\n                }\r\n            }),\r\n            new Promise((_, reject) => setTimeout(reject, this.configuration.timeoutMs, \"Request timed out.\")),\r\n        ]).then((response) => {\r\n            return Promise.resolve(response != undefined);\r\n        });\r\n    }\r\n    createGroup(session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.createGroup(request).then((response) => {\r\n            return Promise.resolve({\r\n                avatar_url: response.avatar_url,\r\n                create_time: response.create_time,\r\n                creator_id: response.creator_id,\r\n                description: response.description,\r\n                edge_count: response.edge_count ? Number(response.edge_count) : 0,\r\n                id: response.id,\r\n                lang_tag: response.lang_tag,\r\n                max_count: response.max_count ? Number(response.max_count) : 0,\r\n                metadata: response.metadata ? JSON.parse(response.metadata) : undefined,\r\n                name: response.name,\r\n                open: response.open,\r\n                update_time: response.update_time\r\n            });\r\n        });\r\n    }\r\n    createSocket(useSSL = false, verbose = false, adapter = new WebSocketAdapterText()) {\r\n        return new DefaultSocket(this.host, this.port, useSSL, verbose, adapter);\r\n    }\r\n    deleteFriends(session, ids, usernames) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        const urlPath = \"/v2/friend\";\r\n        const queryParams = {\r\n            ids: ids,\r\n            usernames: usernames\r\n        };\r\n        const urlQuery = \"?\" + Object.keys(queryParams)\r\n            .map(k => {\r\n            if (queryParams[k] instanceof Array) {\r\n                return queryParams[k].reduce((prev, curr) => {\r\n                    return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                }, \"\");\r\n            }\r\n            else {\r\n                if (queryParams[k] != null) {\r\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                }\r\n            }\r\n        })\r\n            .join(\"\");\r\n        const fetchOptions = Object.assign({ method: \"DELETE\" });\r\n        const headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        if (this.configuration.bearerToken) {\r\n            headers[\"Authorization\"] = \"Bearer \" + this.configuration.bearerToken;\r\n        }\r\n        else if (this.configuration.username) {\r\n            headers[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\r\n        }\r\n        fetchOptions.headers = Object.assign({}, headers);\r\n        return Promise.race([\r\n            fetch(this.configuration.basePath + urlPath + urlQuery, fetchOptions).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    throw response;\r\n                }\r\n            }),\r\n            new Promise((_, reject) => setTimeout(reject, this.configuration.timeoutMs, \"Request timed out.\")),\r\n        ]).then((response) => {\r\n            return Promise.resolve(response != undefined);\r\n        });\r\n    }\r\n    deleteGroup(session, groupId) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.deleteGroup(groupId).then((response) => {\r\n            return response !== undefined;\r\n        });\r\n    }\r\n    deleteNotifications(session, ids) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        const urlPath = \"/v2/notification\";\r\n        const queryParams = {\r\n            ids: ids\r\n        };\r\n        const urlQuery = \"?\" + Object.keys(queryParams)\r\n            .map(k => {\r\n            if (queryParams[k] instanceof Array) {\r\n                return queryParams[k].reduce((prev, curr) => {\r\n                    return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                }, \"\");\r\n            }\r\n            else {\r\n                if (queryParams[k] != null) {\r\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                }\r\n            }\r\n        })\r\n            .join(\"\");\r\n        const fetchOptions = Object.assign({ method: \"DELETE\" });\r\n        const headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        if (this.configuration.bearerToken) {\r\n            headers[\"Authorization\"] = \"Bearer \" + this.configuration.bearerToken;\r\n        }\r\n        else if (this.configuration.username) {\r\n            headers[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\r\n        }\r\n        fetchOptions.headers = Object.assign({}, headers);\r\n        return Promise.race([\r\n            fetch(this.configuration.basePath + urlPath + urlQuery, fetchOptions).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    throw response;\r\n                }\r\n            }),\r\n            new Promise((_, reject) => setTimeout(reject, this.configuration.timeoutMs, \"Request timed out.\")),\r\n        ]).then((response) => {\r\n            return Promise.resolve(response != undefined);\r\n        });\r\n    }\r\n    deleteStorageObjects(session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.deleteStorageObjects(request).then((response) => {\r\n            return Promise.resolve(response != undefined);\r\n        });\r\n    }\r\n    emitEvent(session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.event(request).then((response) => {\r\n            return Promise.resolve(response != undefined);\r\n        });\r\n    }\r\n    getAccount(session) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.getAccount();\r\n    }\r\n    importFacebookFriends(session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.importFacebookFriends(request).then((response) => {\r\n            return response !== undefined;\r\n        });\r\n    }\r\n    getUsers(session, ids, usernames, facebookIds) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.getUsers(ids, usernames, facebookIds).then((response) => {\r\n            var result = {\r\n                users: []\r\n            };\r\n            if (response.users == null) {\r\n                return Promise.resolve(result);\r\n            }\r\n            response.users.forEach(u => {\r\n                result.users.push({\r\n                    avatar_url: u.avatar_url,\r\n                    create_time: u.create_time,\r\n                    display_name: u.display_name,\r\n                    edge_count: u.edge_count ? Number(u.edge_count) : 0,\r\n                    facebook_id: u.facebook_id,\r\n                    gamecenter_id: u.gamecenter_id,\r\n                    google_id: u.google_id,\r\n                    id: u.id,\r\n                    lang_tag: u.lang_tag,\r\n                    location: u.location,\r\n                    online: u.online,\r\n                    steam_id: u.steam_id,\r\n                    timezone: u.timezone,\r\n                    update_time: u.update_time,\r\n                    username: u.username,\r\n                    metadata: u.metadata ? JSON.parse(u.metadata) : undefined\r\n                });\r\n            });\r\n            return Promise.resolve(result);\r\n        });\r\n    }\r\n    joinGroup(session, groupId) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.joinGroup(groupId, {}).then((response) => {\r\n            return response !== undefined;\r\n        });\r\n    }\r\n    joinTournament(session, tournamentId) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.joinTournament(tournamentId, {}).then((response) => {\r\n            return response !== undefined;\r\n        });\r\n    }\r\n    kickGroupUsers(session, groupId, ids) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        const urlPath = \"/v2/group/\" + groupId + \"/kick\";\r\n        const queryParams = {\r\n            user_ids: ids\r\n        };\r\n        const urlQuery = \"?\" + Object.keys(queryParams)\r\n            .map(k => {\r\n            if (queryParams[k] instanceof Array) {\r\n                return queryParams[k].reduce((prev, curr) => {\r\n                    return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                }, \"\");\r\n            }\r\n            else {\r\n                if (queryParams[k] != null) {\r\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                }\r\n            }\r\n        })\r\n            .join(\"\");\r\n        const fetchOptions = Object.assign({ method: \"POST\" });\r\n        const headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        if (this.configuration.bearerToken) {\r\n            headers[\"Authorization\"] = \"Bearer \" + this.configuration.bearerToken;\r\n        }\r\n        else if (this.configuration.username) {\r\n            headers[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\r\n        }\r\n        fetchOptions.headers = Object.assign({}, headers);\r\n        return Promise.race([\r\n            fetch(this.configuration.basePath + urlPath + urlQuery, fetchOptions).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    throw response;\r\n                }\r\n            }),\r\n            new Promise((_, reject) => setTimeout(reject, this.configuration.timeoutMs, \"Request timed out.\")),\r\n        ]).then((response) => {\r\n            return Promise.resolve(response != undefined);\r\n        });\r\n    }\r\n    leaveGroup(session, groupId) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.leaveGroup(groupId, {}).then((response) => {\r\n            return response !== undefined;\r\n        });\r\n    }\r\n    listChannelMessages(session, channelId, limit, forward, cursor) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.listChannelMessages(channelId, limit, forward, cursor).then((response) => {\r\n            var result = {\r\n                messages: [],\r\n                next_cursor: response.next_cursor,\r\n                prev_cursor: response.prev_cursor\r\n            };\r\n            if (response.messages == null) {\r\n                return Promise.resolve(result);\r\n            }\r\n            response.messages.forEach(m => {\r\n                result.messages.push({\r\n                    channel_id: m.channel_id,\r\n                    code: m.code ? Number(m.code) : 0,\r\n                    create_time: m.create_time,\r\n                    message_id: m.message_id,\r\n                    persistent: m.persistent,\r\n                    sender_id: m.sender_id,\r\n                    update_time: m.update_time,\r\n                    username: m.username,\r\n                    content: m.content ? JSON.parse(m.content) : undefined,\r\n                    group_id: m.group_id,\r\n                    room_name: m.room_name,\r\n                    user_id_one: m.user_id_one,\r\n                    user_id_two: m.user_id_two\r\n                });\r\n            });\r\n            return Promise.resolve(result);\r\n        });\r\n    }\r\n    listGroupUsers(session, groupId, state, limit, cursor) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.listGroupUsers(groupId, limit, state, cursor).then((response) => {\r\n            var result = {\r\n                group_users: [],\r\n                cursor: response.cursor\r\n            };\r\n            if (response.group_users == null) {\r\n                return Promise.resolve(result);\r\n            }\r\n            response.group_users.forEach(gu => {\r\n                result.group_users.push({\r\n                    user: {\r\n                        avatar_url: gu.user.avatar_url,\r\n                        create_time: gu.user.create_time,\r\n                        display_name: gu.user.display_name,\r\n                        edge_count: gu.user.edge_count ? Number(gu.user.edge_count) : 0,\r\n                        facebook_id: gu.user.facebook_id,\r\n                        gamecenter_id: gu.user.gamecenter_id,\r\n                        google_id: gu.user.google_id,\r\n                        id: gu.user.id,\r\n                        lang_tag: gu.user.lang_tag,\r\n                        location: gu.user.location,\r\n                        online: gu.user.online,\r\n                        steam_id: gu.user.steam_id,\r\n                        timezone: gu.user.timezone,\r\n                        update_time: gu.user.update_time,\r\n                        username: gu.user.username,\r\n                        metadata: gu.user.metadata ? JSON.parse(gu.user.metadata) : undefined\r\n                    },\r\n                    state: gu.state ? Number(gu.state) : 0\r\n                });\r\n            });\r\n            return Promise.resolve(result);\r\n        });\r\n    }\r\n    listUserGroups(session, userId, state, limit, cursor) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.listUserGroups(userId, state, limit, cursor).then((response) => {\r\n            var result = {\r\n                user_groups: [],\r\n                cursor: response.cursor,\r\n            };\r\n            if (response.user_groups == null) {\r\n                return Promise.resolve(result);\r\n            }\r\n            response.user_groups.forEach(ug => {\r\n                result.user_groups.push({\r\n                    group: {\r\n                        avatar_url: ug.group.avatar_url,\r\n                        create_time: ug.group.create_time,\r\n                        creator_id: ug.group.creator_id,\r\n                        description: ug.group.description,\r\n                        edge_count: ug.group.edge_count ? Number(ug.group.edge_count) : 0,\r\n                        id: ug.group.id,\r\n                        lang_tag: ug.group.lang_tag,\r\n                        max_count: ug.group.max_count,\r\n                        metadata: ug.group.metadata ? JSON.parse(ug.group.metadata) : undefined,\r\n                        name: ug.group.name,\r\n                        open: ug.group.open,\r\n                        update_time: ug.group.update_time\r\n                    },\r\n                    state: ug.state ? Number(ug.state) : 0\r\n                });\r\n            });\r\n            return Promise.resolve(result);\r\n        });\r\n    }\r\n    listGroups(session, name, cursor, limit) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.listGroups(name, cursor, limit).then((response) => {\r\n            var result = {\r\n                groups: []\r\n            };\r\n            if (response.groups == null) {\r\n                return Promise.resolve(result);\r\n            }\r\n            result.cursor = response.cursor;\r\n            response.groups.forEach(ug => {\r\n                result.groups.push({\r\n                    avatar_url: ug.avatar_url,\r\n                    create_time: ug.create_time,\r\n                    creator_id: ug.creator_id,\r\n                    description: ug.description,\r\n                    edge_count: ug.edge_count ? Number(ug.edge_count) : 0,\r\n                    id: ug.id,\r\n                    lang_tag: ug.lang_tag,\r\n                    max_count: ug.max_count,\r\n                    metadata: ug.metadata ? JSON.parse(ug.metadata) : undefined,\r\n                    name: ug.name,\r\n                    open: ug.open,\r\n                    update_time: ug.update_time\r\n                });\r\n            });\r\n            return Promise.resolve(result);\r\n        });\r\n    }\r\n    linkCustom(session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.linkCustom(request).then((response) => {\r\n            return response !== undefined;\r\n        });\r\n    }\r\n    linkDevice(session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.linkDevice(request).then((response) => {\r\n            return response !== undefined;\r\n        });\r\n    }\r\n    linkEmail(session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.linkEmail(request).then((response) => {\r\n            return response !== undefined;\r\n        });\r\n    }\r\n    linkFacebook(session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.linkFacebook(request).then((response) => {\r\n            return response !== undefined;\r\n        });\r\n    }\r\n    linkFacebookInstantGame(session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.linkFacebookInstantGame(request).then((response) => {\r\n            return response !== undefined;\r\n        });\r\n    }\r\n    linkGoogle(session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.linkGoogle(request).then((response) => {\r\n            return response !== undefined;\r\n        });\r\n    }\r\n    linkGameCenter(session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.linkGameCenter(request).then((response) => {\r\n            return response !== undefined;\r\n        });\r\n    }\r\n    linkSteam(session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.linkSteam(request).then((response) => {\r\n            return response !== undefined;\r\n        });\r\n    }\r\n    listFriends(session, state, limit, cursor) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.listFriends(limit, state, cursor).then((response) => {\r\n            var result = {\r\n                friends: [],\r\n                cursor: response.cursor\r\n            };\r\n            if (response.friends == null) {\r\n                return Promise.resolve(result);\r\n            }\r\n            response.friends.forEach(f => {\r\n                result.friends.push({\r\n                    user: {\r\n                        avatar_url: f.user.avatar_url,\r\n                        create_time: f.user.create_time,\r\n                        display_name: f.user.display_name,\r\n                        edge_count: f.user.edge_count ? Number(f.user.edge_count) : 0,\r\n                        facebook_id: f.user.facebook_id,\r\n                        gamecenter_id: f.user.gamecenter_id,\r\n                        google_id: f.user.google_id,\r\n                        id: f.user.id,\r\n                        lang_tag: f.user.lang_tag,\r\n                        location: f.user.location,\r\n                        online: f.user.online,\r\n                        steam_id: f.user.steam_id,\r\n                        timezone: f.user.timezone,\r\n                        update_time: f.user.update_time,\r\n                        username: f.user.username,\r\n                        metadata: f.user.metadata ? JSON.parse(f.user.metadata) : undefined\r\n                    },\r\n                    state: f.state\r\n                });\r\n            });\r\n            return Promise.resolve(result);\r\n        });\r\n    }\r\n    listLeaderboardRecords(session, leaderboardId, ownerIds, limit, cursor, expiry) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.listLeaderboardRecords(leaderboardId, ownerIds, limit, cursor, expiry).then((response) => {\r\n            var list = {\r\n                next_cursor: response.next_cursor,\r\n                prev_cursor: response.prev_cursor,\r\n                owner_records: [],\r\n                records: []\r\n            };\r\n            if (response.owner_records != null) {\r\n                response.owner_records.forEach(o => {\r\n                    list.owner_records.push({\r\n                        expiry_time: o.expiry_time,\r\n                        leaderboard_id: o.leaderboard_id,\r\n                        metadata: o.metadata ? JSON.parse(o.metadata) : undefined,\r\n                        num_score: o.num_score ? Number(o.num_score) : 0,\r\n                        owner_id: o.owner_id,\r\n                        rank: o.rank ? Number(o.rank) : 0,\r\n                        score: o.score ? Number(o.score) : 0,\r\n                        subscore: o.subscore ? Number(o.subscore) : 0,\r\n                        update_time: o.update_time,\r\n                        username: o.username,\r\n                        max_num_score: o.max_num_score ? Number(o.max_num_score) : 0,\r\n                    });\r\n                });\r\n            }\r\n            if (response.records != null) {\r\n                response.records.forEach(o => {\r\n                    list.records.push({\r\n                        expiry_time: o.expiry_time,\r\n                        leaderboard_id: o.leaderboard_id,\r\n                        metadata: o.metadata ? JSON.parse(o.metadata) : undefined,\r\n                        num_score: o.num_score ? Number(o.num_score) : 0,\r\n                        owner_id: o.owner_id,\r\n                        rank: o.rank ? Number(o.rank) : 0,\r\n                        score: o.score ? Number(o.score) : 0,\r\n                        subscore: o.subscore ? Number(o.subscore) : 0,\r\n                        update_time: o.update_time,\r\n                        username: o.username,\r\n                        max_num_score: o.max_num_score ? Number(o.max_num_score) : 0,\r\n                    });\r\n                });\r\n            }\r\n            return Promise.resolve(list);\r\n        });\r\n    }\r\n    listLeaderboardRecordsAroundOwner(session, leaderboardId, ownerId, limit, expiry) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.listLeaderboardRecordsAroundOwner(leaderboardId, ownerId, limit, expiry).then((response) => {\r\n            var list = {\r\n                next_cursor: response.next_cursor,\r\n                prev_cursor: response.prev_cursor,\r\n                owner_records: [],\r\n                records: []\r\n            };\r\n            if (response.owner_records != null) {\r\n                response.owner_records.forEach(o => {\r\n                    list.owner_records.push({\r\n                        expiry_time: o.expiry_time,\r\n                        leaderboard_id: o.leaderboard_id,\r\n                        metadata: o.metadata ? JSON.parse(o.metadata) : undefined,\r\n                        num_score: o.num_score ? Number(o.num_score) : 0,\r\n                        owner_id: o.owner_id,\r\n                        rank: o.rank ? Number(o.rank) : 0,\r\n                        score: o.score ? Number(o.score) : 0,\r\n                        subscore: o.subscore ? Number(o.subscore) : 0,\r\n                        update_time: o.update_time,\r\n                        username: o.username,\r\n                        max_num_score: o.max_num_score ? Number(o.max_num_score) : 0,\r\n                    });\r\n                });\r\n            }\r\n            if (response.records != null) {\r\n                response.records.forEach(o => {\r\n                    list.records.push({\r\n                        expiry_time: o.expiry_time,\r\n                        leaderboard_id: o.leaderboard_id,\r\n                        metadata: o.metadata ? JSON.parse(o.metadata) : undefined,\r\n                        num_score: o.num_score ? Number(o.num_score) : 0,\r\n                        owner_id: o.owner_id,\r\n                        rank: o.rank ? Number(o.rank) : 0,\r\n                        score: o.score ? Number(o.score) : 0,\r\n                        subscore: o.subscore ? Number(o.subscore) : 0,\r\n                        update_time: o.update_time,\r\n                        username: o.username,\r\n                        max_num_score: o.max_num_score ? Number(o.max_num_score) : 0,\r\n                    });\r\n                });\r\n            }\r\n            return Promise.resolve(list);\r\n        });\r\n    }\r\n    listMatches(session, limit, authoritative, label, minSize, maxSize, query) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.listMatches(limit, authoritative, label, minSize, maxSize, query);\r\n    }\r\n    listNotifications(session, limit, cacheableCursor) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.listNotifications(limit, cacheableCursor).then((response) => {\r\n            var result = {\r\n                cacheable_cursor: response.cacheable_cursor,\r\n                notifications: [],\r\n            };\r\n            if (response.notifications == null) {\r\n                return Promise.resolve(result);\r\n            }\r\n            response.notifications.forEach(n => {\r\n                result.notifications.push({\r\n                    code: n.code ? Number(n.code) : 0,\r\n                    create_time: n.create_time,\r\n                    id: n.id,\r\n                    persistent: n.persistent,\r\n                    sender_id: n.sender_id,\r\n                    subject: n.subject,\r\n                    content: n.content ? JSON.parse(n.content) : undefined\r\n                });\r\n            });\r\n            return Promise.resolve(result);\r\n        });\r\n    }\r\n    listStorageObjects(session, collection, userId, limit, cursor) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.listStorageObjects(collection, userId, limit, cursor).then((response) => {\r\n            var result = {\r\n                objects: [],\r\n                cursor: response.cursor\r\n            };\r\n            if (response.objects == null) {\r\n                return Promise.resolve(result);\r\n            }\r\n            response.objects.forEach(o => {\r\n                result.objects.push({\r\n                    collection: o.collection,\r\n                    key: o.key,\r\n                    permission_read: o.permission_read ? Number(o.permission_read) : 0,\r\n                    permission_write: o.permission_write ? Number(o.permission_write) : 0,\r\n                    value: o.value ? JSON.parse(o.value) : undefined,\r\n                    version: o.version,\r\n                    user_id: o.user_id,\r\n                    create_time: o.create_time,\r\n                    update_time: o.update_time\r\n                });\r\n            });\r\n            return Promise.resolve(result);\r\n        });\r\n    }\r\n    listTournaments(session, categoryStart, categoryEnd, startTime, endTime, limit, cursor) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.listTournaments(categoryStart, categoryEnd, startTime, endTime, limit, cursor).then((response) => {\r\n            var list = {\r\n                cursor: response.cursor,\r\n                tournaments: [],\r\n            };\r\n            if (response.tournaments != null) {\r\n                response.tournaments.forEach(o => {\r\n                    list.tournaments.push({\r\n                        id: o.id,\r\n                        title: o.title,\r\n                        description: o.description,\r\n                        duration: o.duration ? Number(o.duration) : 0,\r\n                        category: o.category ? Number(o.category) : 0,\r\n                        sort_order: o.sort_order ? Number(o.sort_order) : 0,\r\n                        size: o.size ? Number(o.size) : 0,\r\n                        max_size: o.max_size ? Number(o.max_size) : 0,\r\n                        max_num_score: o.max_num_score ? Number(o.max_num_score) : 0,\r\n                        can_enter: o.can_enter,\r\n                        end_active: o.end_active ? Number(o.end_active) : 0,\r\n                        next_reset: o.next_reset ? Number(o.next_reset) : 0,\r\n                        metadata: o.metadata ? JSON.parse(o.metadata) : undefined,\r\n                        create_time: o.create_time,\r\n                        start_time: o.start_time,\r\n                        end_time: o.end_time,\r\n                        start_active: o.start_active,\r\n                    });\r\n                });\r\n            }\r\n            return Promise.resolve(list);\r\n        });\r\n    }\r\n    listTournamentRecords(session, tournamentId, ownerIds, limit, cursor, expiry) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.listTournamentRecords(tournamentId, ownerIds, limit, cursor, expiry).then((response) => {\r\n            var list = {\r\n                next_cursor: response.next_cursor,\r\n                prev_cursor: response.prev_cursor,\r\n                owner_records: [],\r\n                records: []\r\n            };\r\n            if (response.owner_records != null) {\r\n                response.owner_records.forEach(o => {\r\n                    list.owner_records.push({\r\n                        expiry_time: o.expiry_time,\r\n                        leaderboard_id: o.leaderboard_id,\r\n                        metadata: o.metadata ? JSON.parse(o.metadata) : undefined,\r\n                        num_score: o.num_score ? Number(o.num_score) : 0,\r\n                        owner_id: o.owner_id,\r\n                        rank: o.rank ? Number(o.rank) : 0,\r\n                        score: o.score ? Number(o.score) : 0,\r\n                        subscore: o.subscore ? Number(o.subscore) : 0,\r\n                        update_time: o.update_time,\r\n                        username: o.username,\r\n                        max_num_score: o.max_num_score ? Number(o.max_num_score) : 0,\r\n                    });\r\n                });\r\n            }\r\n            if (response.records != null) {\r\n                response.records.forEach(o => {\r\n                    list.records.push({\r\n                        expiry_time: o.expiry_time,\r\n                        leaderboard_id: o.leaderboard_id,\r\n                        metadata: o.metadata ? JSON.parse(o.metadata) : undefined,\r\n                        num_score: o.num_score ? Number(o.num_score) : 0,\r\n                        owner_id: o.owner_id,\r\n                        rank: o.rank ? Number(o.rank) : 0,\r\n                        score: o.score ? Number(o.score) : 0,\r\n                        subscore: o.subscore ? Number(o.subscore) : 0,\r\n                        update_time: o.update_time,\r\n                        username: o.username,\r\n                        max_num_score: o.max_num_score ? Number(o.max_num_score) : 0,\r\n                    });\r\n                });\r\n            }\r\n            return Promise.resolve(list);\r\n        });\r\n    }\r\n    listTournamentRecordsAroundOwner(session, tournamentId, ownerId, limit, expiry) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.listTournamentRecordsAroundOwner(tournamentId, ownerId, limit, expiry).then((response) => {\r\n            var list = {\r\n                next_cursor: response.next_cursor,\r\n                prev_cursor: response.prev_cursor,\r\n                owner_records: [],\r\n                records: []\r\n            };\r\n            if (response.owner_records != null) {\r\n                response.owner_records.forEach(o => {\r\n                    list.owner_records.push({\r\n                        expiry_time: o.expiry_time,\r\n                        leaderboard_id: o.leaderboard_id,\r\n                        metadata: o.metadata ? JSON.parse(o.metadata) : undefined,\r\n                        num_score: o.num_score ? Number(o.num_score) : 0,\r\n                        owner_id: o.owner_id,\r\n                        rank: o.rank ? Number(o.rank) : 0,\r\n                        score: o.score ? Number(o.score) : 0,\r\n                        subscore: o.subscore ? Number(o.subscore) : 0,\r\n                        update_time: o.update_time,\r\n                        username: o.username,\r\n                        max_num_score: o.max_num_score ? Number(o.max_num_score) : 0,\r\n                    });\r\n                });\r\n            }\r\n            if (response.records != null) {\r\n                response.records.forEach(o => {\r\n                    list.records.push({\r\n                        expiry_time: o.expiry_time,\r\n                        leaderboard_id: o.leaderboard_id,\r\n                        metadata: o.metadata ? JSON.parse(o.metadata) : undefined,\r\n                        num_score: o.num_score ? Number(o.num_score) : 0,\r\n                        owner_id: o.owner_id,\r\n                        rank: o.rank ? Number(o.rank) : 0,\r\n                        score: o.score ? Number(o.score) : 0,\r\n                        subscore: o.subscore ? Number(o.subscore) : 0,\r\n                        update_time: o.update_time,\r\n                        username: o.username,\r\n                        max_num_score: o.max_num_score ? Number(o.max_num_score) : 0,\r\n                    });\r\n                });\r\n            }\r\n            return Promise.resolve(list);\r\n        });\r\n    }\r\n    promoteGroupUsers(session, groupId, ids) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        const urlPath = \"/v2/group/\" + groupId + \"/promote\";\r\n        const queryParams = {\r\n            user_ids: ids\r\n        };\r\n        const urlQuery = \"?\" + Object.keys(queryParams)\r\n            .map(k => {\r\n            if (queryParams[k] instanceof Array) {\r\n                return queryParams[k].reduce((prev, curr) => {\r\n                    return prev + encodeURIComponent(k) + \"=\" + encodeURIComponent(curr) + \"&\";\r\n                }, \"\");\r\n            }\r\n            else {\r\n                if (queryParams[k] != null) {\r\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(queryParams[k]) + \"&\";\r\n                }\r\n            }\r\n        })\r\n            .join(\"\");\r\n        const fetchOptions = Object.assign({ method: \"POST\" });\r\n        const headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        if (this.configuration.bearerToken) {\r\n            headers[\"Authorization\"] = \"Bearer \" + this.configuration.bearerToken;\r\n        }\r\n        else if (this.configuration.username) {\r\n            headers[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\r\n        }\r\n        fetchOptions.headers = Object.assign({}, headers);\r\n        return Promise.race([\r\n            fetch(this.configuration.basePath + urlPath + urlQuery, fetchOptions).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    throw response;\r\n                }\r\n            }),\r\n            new Promise((_, reject) => setTimeout(reject, this.configuration.timeoutMs, \"Request timed out.\")),\r\n        ]).then((response) => {\r\n            return Promise.resolve(response != undefined);\r\n        });\r\n    }\r\n    readStorageObjects(session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.readStorageObjects(request).then((response) => {\r\n            var result = { objects: [] };\r\n            if (response.objects == null) {\r\n                return Promise.resolve(result);\r\n            }\r\n            response.objects.forEach(o => {\r\n                result.objects.push({\r\n                    collection: o.collection,\r\n                    key: o.key,\r\n                    permission_read: o.permission_read ? Number(o.permission_read) : 0,\r\n                    permission_write: o.permission_write ? Number(o.permission_write) : 0,\r\n                    value: o.value ? JSON.parse(o.value) : undefined,\r\n                    version: o.version,\r\n                    user_id: o.user_id,\r\n                    create_time: o.create_time,\r\n                    update_time: o.update_time\r\n                });\r\n            });\r\n            return Promise.resolve(result);\r\n        });\r\n    }\r\n    rpc(session, id, input) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.rpcFunc(id, JSON.stringify(input)).then((response) => {\r\n            return Promise.resolve({\r\n                id: response.id,\r\n                payload: (!response.payload) ? undefined : JSON.parse(response.payload)\r\n            });\r\n        });\r\n    }\r\n    rpcGet(id, session, httpKey, input) {\r\n        if (!httpKey || httpKey == \"\") {\r\n            this.configuration.bearerToken = (session && session.token);\r\n        }\r\n        else {\r\n            this.configuration.username = undefined;\r\n            this.configuration.bearerToken = undefined;\r\n        }\r\n        return this.apiClient.rpcFunc2(id, input && JSON.stringify(input) || \"\", httpKey)\r\n            .then((response) => {\r\n            this.configuration.username = this.serverkey;\r\n            return Promise.resolve({\r\n                id: response.id,\r\n                payload: (!response.payload) ? undefined : JSON.parse(response.payload)\r\n            });\r\n        }).catch((err) => {\r\n            this.configuration.username = this.serverkey;\r\n            throw err;\r\n        });\r\n    }\r\n    unlinkCustom(session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.unlinkCustom(request).then((response) => {\r\n            return response !== undefined;\r\n        });\r\n    }\r\n    unlinkDevice(session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.unlinkDevice(request).then((response) => {\r\n            return response !== undefined;\r\n        });\r\n    }\r\n    unlinkEmail(session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.unlinkEmail(request).then((response) => {\r\n            return response !== undefined;\r\n        });\r\n    }\r\n    unlinkFacebook(session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.unlinkFacebook(request).then((response) => {\r\n            return response !== undefined;\r\n        });\r\n    }\r\n    unlinkFacebookInstantGame(session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.unlinkFacebookInstantGame(request).then((response) => {\r\n            return response !== undefined;\r\n        });\r\n    }\r\n    unlinkGoogle(session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.unlinkGoogle(request).then((response) => {\r\n            return response !== undefined;\r\n        });\r\n    }\r\n    unlinkGameCenter(session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.unlinkGameCenter(request).then((response) => {\r\n            return response !== undefined;\r\n        });\r\n    }\r\n    unlinkSteam(session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.unlinkSteam(request).then((response) => {\r\n            return response !== undefined;\r\n        });\r\n    }\r\n    updateAccount(session, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.updateAccount(request).then((response) => {\r\n            return response !== undefined;\r\n        });\r\n    }\r\n    updateGroup(session, groupId, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.updateGroup(groupId, request).then((response) => {\r\n            return response !== undefined;\r\n        });\r\n    }\r\n    writeLeaderboardRecord(session, leaderboardId, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.writeLeaderboardRecord(leaderboardId, {\r\n            metadata: request.metadata ? JSON.stringify(request.metadata) : undefined,\r\n            score: request.score,\r\n            subscore: request.subscore\r\n        }).then((response) => {\r\n            return Promise.resolve({\r\n                expiry_time: response.expiry_time,\r\n                leaderboard_id: response.leaderboard_id,\r\n                metadata: response.metadata ? JSON.parse(response.metadata) : undefined,\r\n                num_score: response.num_score ? Number(response.num_score) : 0,\r\n                owner_id: response.owner_id,\r\n                score: response.score ? Number(response.score) : 0,\r\n                subscore: response.subscore ? Number(response.subscore) : 0,\r\n                update_time: response.update_time,\r\n                username: response.username,\r\n                max_num_score: response.max_num_score ? Number(response.max_num_score) : 0,\r\n                rank: response.rank ? Number(response.rank) : 0,\r\n            });\r\n        });\r\n    }\r\n    writeStorageObjects(session, objects) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        var request = { objects: [] };\r\n        objects.forEach(o => {\r\n            request.objects.push({\r\n                collection: o.collection,\r\n                key: o.key,\r\n                permission_read: o.permission_read,\r\n                permission_write: o.permission_write,\r\n                value: JSON.stringify(o.value),\r\n                version: o.version\r\n            });\r\n        });\r\n        return this.apiClient.writeStorageObjects(request);\r\n    }\r\n    writeTournamentRecord(session, tournamentId, request) {\r\n        this.configuration.bearerToken = (session && session.token);\r\n        return this.apiClient.writeTournamentRecord(tournamentId, {\r\n            metadata: request.metadata ? JSON.stringify(request.metadata) : undefined,\r\n            score: request.score,\r\n            subscore: request.subscore\r\n        }).then((response) => {\r\n            return Promise.resolve({\r\n                expiry_time: response.expiry_time,\r\n                leaderboard_id: response.leaderboard_id,\r\n                metadata: response.metadata ? JSON.parse(response.metadata) : undefined,\r\n                num_score: response.num_score ? Number(response.num_score) : 0,\r\n                owner_id: response.owner_id,\r\n                score: response.score ? Number(response.score) : 0,\r\n                subscore: response.subscore ? Number(response.subscore) : 0,\r\n                update_time: response.update_time,\r\n                username: response.username,\r\n                max_num_score: response.max_num_score ? Number(response.max_num_score) : 0,\r\n                rank: response.rank ? Number(response.rank) : 0,\r\n            });\r\n        });\r\n    }\r\n}\r\n;\r\n//# sourceMappingURL=client.js.map","dts":{"name":"/Users/lugehorsam/nakama-js/packages/nakama-js/.rpt2_cache/placeholder/client.d.ts","writeByteOrderMark":false,"text":"import { ApiAccount, ApiAccountCustom, ApiAccountDevice, ApiAccountEmail, ApiAccountFacebook, ApiAccountFacebookInstantGame, ApiAccountGoogle, ApiAccountGameCenter, ApiAccountSteam, ApiCreateGroupRequest, ApiDeleteStorageObjectsRequest, ApiEvent, ApiMatchList, ApiReadStorageObjectsRequest, ApiStorageObjectAcks, ApiUpdateAccountRequest, ApiUpdateGroupRequest } from \"./api.gen\";\r\nimport { Session } from \"./session\";\r\nimport { Socket } from \"./socket\";\r\nimport { WebSocketAdapter } from \"./web_socket_adapter\";\r\nexport interface AccountCustom {\r\n    username?: string;\r\n    create?: boolean;\r\n    id?: string;\r\n    vars?: {\r\n        [key: string]: string;\r\n    };\r\n}\r\nexport interface AccountDevice {\r\n    username?: string;\r\n    create?: boolean;\r\n    id?: string;\r\n    vars?: {\r\n        [key: string]: string;\r\n    };\r\n}\r\nexport interface AccountEmail {\r\n    username?: string;\r\n    create?: boolean;\r\n    email?: string;\r\n    password?: string;\r\n    vars?: {\r\n        [key: string]: string;\r\n    };\r\n}\r\nexport interface AccountFacebook {\r\n    username?: string;\r\n    create?: boolean;\r\n    token?: string;\r\n    vars?: {\r\n        [key: string]: string;\r\n    };\r\n}\r\nexport interface AccountFacebookInstantGame {\r\n    username?: string;\r\n    create?: boolean;\r\n    signed_player_info?: string;\r\n    vars?: Map<string, string>;\r\n}\r\nexport interface AccountGameCenter {\r\n    username?: string;\r\n    create?: boolean;\r\n    bundle_id?: string;\r\n    player_id?: string;\r\n    public_key_url?: string;\r\n    salt?: string;\r\n    signature?: string;\r\n    timestamp_seconds?: string;\r\n    vars?: {\r\n        [key: string]: string;\r\n    };\r\n}\r\nexport interface AccountGoogle {\r\n    username?: string;\r\n    create?: boolean;\r\n    token?: string;\r\n    vars?: {\r\n        [key: string]: string;\r\n    };\r\n}\r\nexport interface AccountSteam {\r\n    username?: string;\r\n    create?: boolean;\r\n    token?: string;\r\n    vars?: {\r\n        [key: string]: string;\r\n    };\r\n}\r\nexport interface RpcResponse {\r\n    id?: string;\r\n    payload?: object;\r\n}\r\nexport interface LeaderboardRecord {\r\n    create_time?: string;\r\n    expiry_time?: string;\r\n    leaderboard_id?: string;\r\n    metadata?: object;\r\n    num_score?: number;\r\n    owner_id?: string;\r\n    rank?: number;\r\n    score?: number;\r\n    subscore?: number;\r\n    update_time?: string;\r\n    username?: string;\r\n    max_num_score?: number;\r\n}\r\nexport interface LeaderboardRecordList {\r\n    next_cursor?: string;\r\n    owner_records?: Array<LeaderboardRecord>;\r\n    prev_cursor?: string;\r\n    records?: Array<LeaderboardRecord>;\r\n}\r\nexport interface Tournament {\r\n    id?: string;\r\n    title?: string;\r\n    description?: string;\r\n    duration?: number;\r\n    category?: number;\r\n    sort_order?: number;\r\n    size?: number;\r\n    max_size?: number;\r\n    max_num_score?: number;\r\n    can_enter?: boolean;\r\n    end_active?: number;\r\n    next_reset?: number;\r\n    metadata?: object;\r\n    create_time?: string;\r\n    start_time?: string;\r\n    end_time?: string;\r\n    start_active?: number;\r\n}\r\nexport interface TournamentList {\r\n    tournaments?: Array<Tournament>;\r\n    cursor?: string;\r\n}\r\nexport interface TournamentRecordList {\r\n    next_cursor?: string;\r\n    owner_records?: Array<LeaderboardRecord>;\r\n    prev_cursor?: string;\r\n    records?: Array<LeaderboardRecord>;\r\n}\r\nexport interface WriteTournamentRecord {\r\n    metadata?: object;\r\n    score?: string;\r\n    subscore?: string;\r\n}\r\nexport interface WriteLeaderboardRecord {\r\n    metadata?: object;\r\n    score?: string;\r\n    subscore?: string;\r\n}\r\nexport interface WriteStorageObject {\r\n    collection?: string;\r\n    key?: string;\r\n    permission_read?: number;\r\n    permission_write?: number;\r\n    value?: object;\r\n    version?: string;\r\n}\r\nexport interface StorageObject {\r\n    collection?: string;\r\n    create_time?: string;\r\n    key?: string;\r\n    permission_read?: number;\r\n    permission_write?: number;\r\n    update_time?: string;\r\n    user_id?: string;\r\n    value?: object;\r\n    version?: string;\r\n}\r\nexport interface StorageObjectList {\r\n    cursor?: string;\r\n    objects: Array<StorageObject>;\r\n}\r\nexport interface StorageObjects {\r\n    objects: Array<StorageObject>;\r\n}\r\nexport interface ChannelMessage {\r\n    channel_id?: string;\r\n    code?: number;\r\n    content?: object;\r\n    create_time?: string;\r\n    group_id?: string;\r\n    message_id?: string;\r\n    persistent?: boolean;\r\n    room_name?: string;\r\n    reference_id?: string;\r\n    sender_id?: string;\r\n    update_time?: string;\r\n    user_id_one?: string;\r\n    user_id_two?: string;\r\n    username?: string;\r\n}\r\nexport interface ChannelMessageList {\r\n    messages?: Array<ChannelMessage>;\r\n    next_cursor?: string;\r\n    prev_cursor?: string;\r\n}\r\nexport interface User {\r\n    avatar_url?: string;\r\n    create_time?: string;\r\n    display_name?: string;\r\n    edge_count?: number;\r\n    facebook_id?: string;\r\n    gamecenter_id?: string;\r\n    google_id?: string;\r\n    id?: string;\r\n    lang_tag?: string;\r\n    location?: string;\r\n    metadata?: {};\r\n    online?: boolean;\r\n    steam_id?: string;\r\n    timezone?: string;\r\n    update_time?: string;\r\n    username?: string;\r\n}\r\nexport interface Users {\r\n    users?: Array<User>;\r\n}\r\nexport interface Friend {\r\n    state?: number;\r\n    user?: User;\r\n}\r\nexport interface Friends {\r\n    friends?: Array<Friend>;\r\n    cursor?: string;\r\n}\r\nexport interface GroupUser {\r\n    user?: User;\r\n    state?: number;\r\n}\r\nexport interface GroupUserList {\r\n    group_users?: Array<GroupUser>;\r\n    cursor?: string;\r\n}\r\nexport interface Group {\r\n    avatar_url?: string;\r\n    create_time?: string;\r\n    creator_id?: string;\r\n    description?: string;\r\n    edge_count?: number;\r\n    id?: string;\r\n    lang_tag?: string;\r\n    max_count?: number;\r\n    metadata?: {};\r\n    name?: string;\r\n    open?: boolean;\r\n    update_time?: string;\r\n}\r\nexport interface GroupList {\r\n    cursor?: string;\r\n    groups?: Array<Group>;\r\n}\r\nexport interface UserGroup {\r\n    group?: Group;\r\n    state?: number;\r\n}\r\nexport interface UserGroupList {\r\n    user_groups?: Array<UserGroup>;\r\n    cursor?: string;\r\n}\r\nexport interface Notification {\r\n    code?: number;\r\n    content?: {};\r\n    create_time?: string;\r\n    id?: string;\r\n    persistent?: boolean;\r\n    sender_id?: string;\r\n    subject?: string;\r\n}\r\nexport interface NotificationList {\r\n    cacheable_cursor?: string;\r\n    notifications?: Array<Notification>;\r\n}\r\nexport declare class Client {\r\n    readonly serverkey: string;\r\n    readonly host: string;\r\n    readonly port: string;\r\n    readonly useSSL: boolean;\r\n    readonly timeout: number;\r\n    private readonly apiClient;\r\n    private readonly configuration;\r\n    constructor(serverkey?: string, host?: string, port?: string, useSSL?: boolean, timeout?: number);\r\n    addGroupUsers(session: Session, groupId: string, ids?: Array<string>): Promise<boolean>;\r\n    addFriends(session: Session, ids?: Array<string>, usernames?: Array<string>): Promise<boolean>;\r\n    authenticateCustom(request: AccountCustom): Promise<Session>;\r\n    authenticateDevice(request: AccountDevice): Promise<Session>;\r\n    authenticateEmail(request: AccountEmail): Promise<Session>;\r\n    authenticateFacebookInstantGame(request: AccountFacebookInstantGame): Promise<Session>;\r\n    authenticateFacebook(request: AccountFacebook): Promise<Session>;\r\n    authenticateGoogle(request: AccountGoogle): Promise<Session>;\r\n    authenticateGameCenter(request: AccountGameCenter): Promise<Session>;\r\n    authenticateSteam(request: AccountSteam): Promise<Session>;\r\n    banGroupUsers(session: Session, groupId: string, ids?: Array<string>): Promise<boolean>;\r\n    blockFriends(session: Session, ids?: Array<string>, usernames?: Array<string>): Promise<boolean>;\r\n    createGroup(session: Session, request: ApiCreateGroupRequest): Promise<Group>;\r\n    createSocket(useSSL?: boolean, verbose?: boolean, adapter?: WebSocketAdapter): Socket;\r\n    deleteFriends(session: Session, ids?: Array<string>, usernames?: Array<string>): Promise<boolean>;\r\n    deleteGroup(session: Session, groupId: string): Promise<boolean>;\r\n    deleteNotifications(session: Session, ids?: Array<string>): Promise<boolean>;\r\n    deleteStorageObjects(session: Session, request: ApiDeleteStorageObjectsRequest): Promise<boolean>;\r\n    emitEvent(session: Session, request: ApiEvent): Promise<boolean>;\r\n    getAccount(session: Session): Promise<ApiAccount>;\r\n    importFacebookFriends(session: Session, request: ApiAccountFacebook): Promise<boolean>;\r\n    getUsers(session: Session, ids?: Array<string>, usernames?: Array<string>, facebookIds?: Array<string>): Promise<Users>;\r\n    joinGroup(session: Session, groupId: string): Promise<boolean>;\r\n    joinTournament(session: Session, tournamentId: string): Promise<boolean>;\r\n    kickGroupUsers(session: Session, groupId: string, ids?: Array<string>): Promise<boolean>;\r\n    leaveGroup(session: Session, groupId: string): Promise<boolean>;\r\n    listChannelMessages(session: Session, channelId: string, limit?: number, forward?: boolean, cursor?: string): Promise<ChannelMessageList>;\r\n    listGroupUsers(session: Session, groupId: string, state?: number, limit?: number, cursor?: string): Promise<GroupUserList>;\r\n    listUserGroups(session: Session, userId: string, state?: number, limit?: number, cursor?: string): Promise<UserGroupList>;\r\n    listGroups(session: Session, name?: string, cursor?: string, limit?: number): Promise<GroupList>;\r\n    linkCustom(session: Session, request: ApiAccountCustom): Promise<boolean>;\r\n    linkDevice(session: Session, request: ApiAccountDevice): Promise<boolean>;\r\n    linkEmail(session: Session, request: ApiAccountEmail): Promise<boolean>;\r\n    linkFacebook(session: Session, request: ApiAccountFacebook): Promise<boolean>;\r\n    linkFacebookInstantGame(session: Session, request: ApiAccountFacebookInstantGame): Promise<boolean>;\r\n    linkGoogle(session: Session, request: ApiAccountGoogle): Promise<boolean>;\r\n    linkGameCenter(session: Session, request: ApiAccountGameCenter): Promise<boolean>;\r\n    linkSteam(session: Session, request: ApiAccountSteam): Promise<boolean>;\r\n    listFriends(session: Session, state?: number, limit?: number, cursor?: string): Promise<Friends>;\r\n    listLeaderboardRecords(session: Session, leaderboardId: string, ownerIds?: Array<string>, limit?: number, cursor?: string, expiry?: string): Promise<LeaderboardRecordList>;\r\n    listLeaderboardRecordsAroundOwner(session: Session, leaderboardId: string, ownerId: string, limit?: number, expiry?: string): Promise<LeaderboardRecordList>;\r\n    listMatches(session: Session, limit?: number, authoritative?: boolean, label?: string, minSize?: number, maxSize?: number, query?: string): Promise<ApiMatchList>;\r\n    listNotifications(session: Session, limit?: number, cacheableCursor?: string): Promise<NotificationList>;\r\n    listStorageObjects(session: Session, collection: string, userId?: string, limit?: number, cursor?: string): Promise<StorageObjectList>;\r\n    listTournaments(session: Session, categoryStart?: number, categoryEnd?: number, startTime?: number, endTime?: number, limit?: number, cursor?: string): Promise<TournamentList>;\r\n    listTournamentRecords(session: Session, tournamentId: string, ownerIds?: Array<string>, limit?: number, cursor?: string, expiry?: string): Promise<TournamentRecordList>;\r\n    listTournamentRecordsAroundOwner(session: Session, tournamentId: string, ownerId: string, limit?: number, expiry?: string): Promise<TournamentRecordList>;\r\n    promoteGroupUsers(session: Session, groupId: string, ids?: Array<string>): Promise<boolean>;\r\n    readStorageObjects(session: Session, request: ApiReadStorageObjectsRequest): Promise<StorageObjects>;\r\n    rpc(session: Session, id: string, input: object): Promise<RpcResponse>;\r\n    rpcGet(id: string, session?: Session, httpKey?: string, input?: object): Promise<RpcResponse>;\r\n    unlinkCustom(session: Session, request: ApiAccountCustom): Promise<boolean>;\r\n    unlinkDevice(session: Session, request: ApiAccountDevice): Promise<boolean>;\r\n    unlinkEmail(session: Session, request: ApiAccountEmail): Promise<boolean>;\r\n    unlinkFacebook(session: Session, request: ApiAccountFacebook): Promise<boolean>;\r\n    unlinkFacebookInstantGame(session: Session, request: ApiAccountFacebookInstantGame): Promise<boolean>;\r\n    unlinkGoogle(session: Session, request: ApiAccountGoogle): Promise<boolean>;\r\n    unlinkGameCenter(session: Session, request: ApiAccountGameCenter): Promise<boolean>;\r\n    unlinkSteam(session: Session, request: ApiAccountSteam): Promise<boolean>;\r\n    updateAccount(session: Session, request: ApiUpdateAccountRequest): Promise<boolean>;\r\n    updateGroup(session: Session, groupId: string, request: ApiUpdateGroupRequest): Promise<boolean>;\r\n    writeLeaderboardRecord(session: Session, leaderboardId: string, request: WriteLeaderboardRecord): Promise<LeaderboardRecord>;\r\n    writeStorageObjects(session: Session, objects: Array<WriteStorageObject>): Promise<ApiStorageObjectAcks>;\r\n    writeTournamentRecord(session: Session, tournamentId: string, request: WriteTournamentRecord): Promise<LeaderboardRecord>;\r\n}\r\n"}}
